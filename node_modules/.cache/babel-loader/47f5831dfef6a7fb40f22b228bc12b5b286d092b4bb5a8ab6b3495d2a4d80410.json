{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport { itemList } from '../data/itemList';\nexport const useWarehouseStore = defineStore('warehouse', {\n  state: () => ({\n    capacity: 20,\n    coin: 0,\n    slayerCoin: 0,\n    items: new Map(),\n    notifications: []\n  }),\n  actions: {\n    isWarehouseFull() {\n      return this.items.size >= this.capacity;\n    },\n    // 显示通知\n    addNotification(itemName, itemQuantity) {\n      const existingNotification = this.notifications.find(notification => notification.itemName === itemName);\n      if (existingNotification) {\n        existingNotification.itemQuantity += itemQuantity;\n        existingNotification.timer = null;\n        existingNotification.timer = setTimeout(() => {\n          this.removeNotification(notification.id);\n        }, 2000);\n        return;\n      } else {\n        const notification = {\n          itemName,\n          itemQuantity,\n          id: Date.now(),\n          timer: null\n        };\n        this.notifications.push(notification);\n        notification.timer = setTimeout(() => {\n          this.removeNotification(notification.id);\n        }, 2000);\n      }\n    },\n    // 移除通知\n    removeNotification(id) {\n      this.notifications = this.notifications.filter(notification => notification.id !== id);\n    },\n    // 添加物品\n    addItem(itemId, count) {\n      const itemDetails = itemList[itemId];\n      if (!itemDetails) {\n        console.error('Item not found in item list:', itemId);\n        return;\n      }\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\n        console.log('Warehouse is full. Cannot add new item type.');\n        return;\n      }\n      const currentItem = this.items.get(itemId);\n      if (currentItem) {\n        currentItem.count += count;\n      } else {\n        const newItem = {\n          count: 0,\n          ...itemDetails\n        };\n        newItem.count += count;\n        this.items.set(itemId, newItem);\n      }\n\n      // 调用显示通知\n      this.showNotification(itemDetails.name, this.items.get(itemId).count);\n    },\n    // 消耗物品\n    costItem(itemId, count) {\n      const targetItem = this.items.get(itemId);\n      if (targetItem.count < count) {\n        console.log(`Action failed, the number of ${targetItem.name} is not enough`);\n        return;\n      }\n      targetItem.count -= count;\n      if (targetItem.count === 0) {\n        this.items.delete(itemId);\n      }\n    },\n    // 获取物品数量\n    getItemNumber(itemId) {\n      const thisItem = this.items.get(itemId);\n      return thisItem ? thisItem.count : 0;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","itemList","useWarehouseStore","state","capacity","coin","slayerCoin","items","Map","notifications","actions","isWarehouseFull","size","addNotification","itemName","itemQuantity","existingNotification","find","notification","timer","setTimeout","removeNotification","id","Date","now","push","filter","addItem","itemId","count","itemDetails","console","error","has","log","currentItem","get","newItem","set","showNotification","name","costItem","targetItem","delete","getItemNumber","thisItem"],"sources":["C:/Users/10433/Downloads/vues/vue-cli-01-a-new-vue-project/src/stores/warehouse.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { itemList } from '../data/itemList';\r\n\r\nexport const useWarehouseStore = defineStore('warehouse', {\r\n  state: () => ({\r\n    capacity: 20,\r\n    coin: 0,\r\n    slayerCoin: 0,\r\n    items: new Map(),\r\n    notifications: [],\r\n  }),\r\n\r\n  actions: {\r\n    isWarehouseFull() {\r\n      return this.items.size >= this.capacity;\r\n    },\r\n\r\n    // 显示通知\r\n    addNotification(itemName, itemQuantity) {\r\n      const existingNotification = this.notifications.find(notification => notification.itemName === itemName);\r\n      if(existingNotification){\r\n        existingNotification.itemQuantity += itemQuantity;\r\n        existingNotification.timer = null;\r\n        existingNotification.timer = setTimeout(() => {\r\n          this.removeNotification(notification.id);\r\n        }, 2000);\r\n        return;\r\n      }else{\r\n        const notification = {\r\n          itemName,\r\n          itemQuantity,\r\n          id: Date.now(),\r\n          timer: null,\r\n        };\r\n        this.notifications.push(notification);\r\n        notification.timer = setTimeout(() => {\r\n          this.removeNotification(notification.id);\r\n        }, 2000);\r\n      }\r\n\r\n      \r\n\r\n      \r\n    },\r\n\r\n    // 移除通知\r\n    removeNotification(id) {\r\n      this.notifications = this.notifications.filter(\r\n        (notification) => notification.id !== id\r\n      );\r\n    },\r\n    // 添加物品\r\n    addItem(itemId, count) {\r\n      const itemDetails = itemList[itemId];\r\n      if (!itemDetails) {\r\n        console.error('Item not found in item list:', itemId);\r\n        return;\r\n      }\r\n\r\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\r\n        console.log('Warehouse is full. Cannot add new item type.');\r\n        return;\r\n      }\r\n\r\n      const currentItem = this.items.get(itemId);\r\n      if (currentItem) {\r\n        currentItem.count += count;\r\n      } else {\r\n        const newItem = { count: 0, ...itemDetails };\r\n        newItem.count += count;\r\n        this.items.set(itemId, newItem);\r\n      }\r\n\r\n      // 调用显示通知\r\n      this.showNotification(itemDetails.name, this.items.get(itemId).count);\r\n    },\r\n\r\n    // 消耗物品\r\n    costItem(itemId, count) {\r\n      const targetItem = this.items.get(itemId);\r\n      if (targetItem.count < count) {\r\n        console.log(`Action failed, the number of ${targetItem.name} is not enough`);\r\n        return;\r\n      }\r\n      targetItem.count -= count;\r\n      if (targetItem.count === 0) {\r\n        this.items.delete(itemId);\r\n      }\r\n    },\r\n\r\n    // 获取物品数量\r\n    getItemNumber(itemId) {\r\n      const thisItem = this.items.get(itemId);\r\n      return thisItem ? thisItem.count : 0;\r\n    },\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}