{"ast":null,"code":"import { inject } from 'vue';\nexport default {\n  setup() {\n    const state = inject('state');\n    const close = () => {\n      state.isVisble = false;\n    };\n    return {\n      state,\n      close\n    };\n  },\n  props: {\n    position: {\n      type: Object,\n      default: () => ({\n        left: '0px',\n        top: '0px'\n      })\n    }\n  },\n  methods: {\n    beforeEnter(el) {\n      // 在进入动画之前，设置初始状态\n      el.style.transform = 'translateY(-100%)'; // 让元素初始在屏幕外\n      el.style.opacity = '0'; // 让元素初始透明\n    },\n    enter(el, done) {\n      // 动画开始时的设置\n      el.offsetHeight; // 强制浏览器重新计算样式以触发过渡\n      el.style.transition = 'transform 0.5s ease, opacity 0.3s ease';\n      el.style.transform = 'translateY(0)';\n      el.style.opacity = '1';\n      done(); // 完成动画\n    },\n    leave(el, done) {\n      // 离开动画\n      el.style.transition = 'transform 0.5s ease, opacity 0.3s ease';\n      el.style.transform = 'translateY(-100%)';\n      el.style.opacity = '0';\n      done(); // 完成动画\n    }\n  }\n};","map":{"version":3,"names":["inject","setup","state","close","isVisble","props","position","type","Object","default","left","top","methods","beforeEnter","el","style","transform","opacity","enter","done","offsetHeight","transition","leave"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\baseHelpPage.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"state.isVisble\" class=\"overlay\" @click=\"close\" :style=\"{ zIndex: state.isVisble ? '100' : '-1' }\">\r\n    <transition>\r\n    <div class=\"content\" @click.stop>  \r\n        <span class=\"close-btn\" @click=\"close\">X</span>\r\n        <span class=\"guide\">游戏指南</span>\r\n      <div class=\"popup-content\">\r\n        \r\n        <p>这里是弹出的内容</p>\r\n      </div>\r\n    </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { inject } from 'vue';\r\n\r\nexport default {\r\n    setup(){\r\n        const state = inject('state');\r\n        const close = () => {\r\n            state.isVisble = false;\r\n        }\r\n        return{state, close}\r\n    },\r\n    props:{\r\n        position: {\r\n            type: Object,\r\n            default: () => ({ left: '0px', top: '0px' })\r\n        },\r\n\r\n\r\n    },\r\n    methods: {\r\n        beforeEnter(el) {\r\n            // 在进入动画之前，设置初始状态\r\n            el.style.transform = 'translateY(-100%)';  // 让元素初始在屏幕外\r\n            el.style.opacity = '0';  // 让元素初始透明\r\n        },\r\n        enter(el, done) {\r\n            // 动画开始时的设置\r\n            el.offsetHeight; // 强制浏览器重新计算样式以触发过渡\r\n            el.style.transition = 'transform 0.5s ease, opacity 0.3s ease';\r\n            el.style.transform = 'translateY(0)';\r\n            el.style.opacity = '1';\r\n            done(); // 完成动画\r\n        },\r\n        leave(el, done) {\r\n            // 离开动画\r\n            el.style.transition = 'transform 0.5s ease, opacity 0.3s ease';\r\n            el.style.transform = 'translateY(-100%)';\r\n            el.style.opacity = '0';\r\n            done(); // 完成动画\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 背景遮罩 */\r\n.overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  justify-items: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.overlay > .content{\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3rem;\r\n    margin: 2rem;\r\n    width: 50%;\r\n    \r\n    background-color: rgb(35, 42, 53);\r\n\r\n\r\n}\r\n.guide{\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 900;\r\n    letter-spacing: 0.5rem;\r\n    \r\n}\r\n.close-btn {\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  color: black;\r\n  background: none;\r\n  border: none;\r\n  border-radius: 1rem;\r\n  font-weight:bolder;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 弹出窗口样式 */\r\n.modal {\r\n  position: fixed;\r\n  top: -100%; /* 初始位置在上方 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  height: 400px;\r\n  width: 400px; /* 固定宽度 */\r\n  max-width: 90%; /* 最大宽度 */\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  z-index: 20;\r\n}\r\n\r\n/* 弹出窗口内容 */\r\n.modal-content {\r\n  position: relative;\r\n}\r\n\r\n\r\n\r\n/* 动画过渡效果 */\r\n.window-slide-enter-active, .window-slide-leave-active {\r\n  transition: transform 0.5s ease, opacity 0.3s ease;\r\n}\r\n\r\n.window-slide-enter, .window-slide-leave-to {\r\n  transform: translateY(-100%); /* 初始位置和离开时的位移 */\r\n  opacity: 0;\r\n}\r\n\r\n.window-slide-enter-to {\r\n  transform: translateY(0); /* 动画结束时，位置应在屏幕中 */\r\n  opacity: 1;\r\n}\r\n</style>\r\n"],"mappings":"AAiBA,SAASA,MAAK,QAAS,KAAK;AAE5B,eAAe;EACXC,KAAKA,CAAA,EAAE;IACH,MAAMC,KAAI,GAAIF,MAAM,CAAC,OAAO,CAAC;IAC7B,MAAMG,KAAI,GAAIA,CAAA,KAAM;MAChBD,KAAK,CAACE,QAAO,GAAI,KAAK;IAC1B;IACA,OAAM;MAACF,KAAK;MAAEC;IAAK;EACvB,CAAC;EACDE,KAAK,EAAC;IACFC,QAAQ,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QAAEC,IAAI,EAAE,KAAK;QAAEC,GAAG,EAAE;MAAM,CAAC;IAC/C;EAGJ,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAACC,EAAE,EAAE;MACZ;MACAA,EAAE,CAACC,KAAK,CAACC,SAAQ,GAAI,mBAAmB,EAAG;MAC3CF,EAAE,CAACC,KAAK,CAACE,OAAM,GAAI,GAAG,EAAG;IAC7B,CAAC;IACDC,KAAKA,CAACJ,EAAE,EAAEK,IAAI,EAAE;MACZ;MACAL,EAAE,CAACM,YAAY,EAAE;MACjBN,EAAE,CAACC,KAAK,CAACM,UAAS,GAAI,wCAAwC;MAC9DP,EAAE,CAACC,KAAK,CAACC,SAAQ,GAAI,eAAe;MACpCF,EAAE,CAACC,KAAK,CAACE,OAAM,GAAI,GAAG;MACtBE,IAAI,CAAC,CAAC,EAAE;IACZ,CAAC;IACDG,KAAKA,CAACR,EAAE,EAAEK,IAAI,EAAE;MACZ;MACAL,EAAE,CAACC,KAAK,CAACM,UAAS,GAAI,wCAAwC;MAC9DP,EAAE,CAACC,KAAK,CAACC,SAAQ,GAAI,mBAAmB;MACxCF,EAAE,CAACC,KAAK,CAACE,OAAM,GAAI,GAAG;MACtBE,IAAI,CAAC,CAAC,EAAE;IACZ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}