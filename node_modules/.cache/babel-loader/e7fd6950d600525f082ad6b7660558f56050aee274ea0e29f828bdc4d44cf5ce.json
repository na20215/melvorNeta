{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"trees\"\n};\nconst _hoisted_2 = {\n  class: \"treesContent\"\n};\nconst _hoisted_3 = {\n  style: {\n    fontSize: '0.7rem'\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    fontSize: '0.6rem'\n  }\n};\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_basic_block = _resolveComponent(\"basic-block\");\n  const _component_basic_exp_bar = _resolveComponent(\"basic-exp-bar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_basic_block, {\n    \"block-width\": '100%',\n    \"side-color\": 'rgb(53,143,18)'\n  }), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.treesData, tree => {\n    return _openBlock(), _createBlock(_component_basic_block, {\n      key: tree.name,\n      \"block-width\": '23%',\n      \"side-color\": 'rgb(53,143,18)'\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n        style: {\n          fontSize: '0.5rem'\n        }\n      }, \"砍伐\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(tree.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(tree.exp) + \"/\" + _toDisplayString(tree.cutTime) + \"秒\", 1 /* TEXT */), _createElementVNode(\"span\", null, [_createElementVNode(\"img\", {\n        src: tree.icon\n      }, null, 8 /* PROPS */, _hoisted_5)]), _createVNode(_component_basic_exp_bar), _cache[1] || (_cache[1] = _createElementVNode(\"span\", null, null, -1 /* HOISTED */))])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    style: {\n      margin: '10rem'\n    }\n  }, null, -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","fontSize","_createElementBlock","_Fragment","_createVNode","_component_basic_block","_createElementVNode","_hoisted_1","_renderList","$data","treesData","tree","_createBlock","key","name","default","_withCtx","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","exp","cutTime","src","icon","_hoisted_5","_component_basic_exp_bar","_","margin"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\skills\\skillCutting.vue"],"sourcesContent":["<template>\r\n    <basic-block :block-width=\"'100%'\"\r\n    :side-color=\"'rgb(53,143,18)'\"></basic-block>\r\n  <div class=\"trees\">\r\n    <basic-block\r\n        v-for=\"tree in treesData\"\r\n        :key=\"tree.name\"\r\n        :block-width=\"'23%'\"\r\n        :side-color=\"'rgb(53,143,18)'\">   \r\n        <div class=\"treesContent\">\r\n            <span :style=\"{fontSize:'0.5rem'}\">砍伐</span>\r\n            <span :style=\"{fontSize:'0.7rem'}\">{{ tree.name }}</span>\r\n            <span :style=\"{fontSize:'0.6rem'}\">{{ tree.exp }}/{{ tree.cutTime }}秒</span>\r\n            <span><img :src=\"tree.icon\"></span>\r\n            <basic-exp-bar></basic-exp-bar>\r\n            <span></span>\r\n        </div>\r\n    </basic-block>\r\n  </div>\r\n  <div :style=\"{margin:'10rem'}\"></div>\r\n</template>\r\n\r\n<script>\r\nimport basicBlock from '../basicBlock.vue'\r\n\r\nexport default {\r\n  components: { basicBlock },\r\n    data() {\r\n        return {\r\n            treesData: {\r\n                '普通树': {\r\n                    name:'普通树',\r\n                    icon: require('@/assets/woodcutting/normal_tree.svg'),\r\n                    requirementLevel:1,\r\n                    exp: 10,\r\n                    cutTime: 3,\r\n                    reward: '普通原木'    \r\n                },\r\n                '橡树': {\r\n                    name:'橡树',\r\n                    icon: require('@/assets/woodcutting/oak_tree.svg'),\r\n                    requirementLevel:10,\r\n                    exp: 15,\r\n                    cutTime: 4,\r\n                    reward: '橡木'    \r\n                },\r\n                '柳树': {\r\n                    name:'柳树',\r\n                    icon: require('@/assets/woodcutting/willow_tree.svg'),\r\n                    requirementLevel:25,\r\n                    exp: 22,\r\n                    cutTime: 5,\r\n                    reward: '柳木'    \r\n                },\r\n                '柚树': {\r\n                    name:'柚树',\r\n                    icon: require('@/assets/woodcutting/teak_tree.svg'),\r\n                    requirementLevel:35,\r\n                    exp: 30,\r\n                    cutTime: 6,\r\n                    reward: '柚木'    \r\n                },\r\n                '枫树': {\r\n                    name:'枫树',\r\n                    icon: require('@/assets/woodcutting/maple_tree.svg'),\r\n                    requirementLevel:45,\r\n                    exp: 40,\r\n                    cutTime: 8,\r\n                    reward: '枫木'    \r\n                },\r\n                '桃花芯树': {\r\n                    name:'桃花芯树',\r\n                    icon: require('@/assets/woodcutting/mahogany_tree.svg'),\r\n                    requirementLevel:55,\r\n                    exp: 60,\r\n                    cutTime: 10,\r\n                    reward: '桃花芯木'    \r\n                },\r\n                '紫衫': {\r\n                    name:'紫衫',\r\n                    icon: require('@/assets/woodcutting/yew_tree.svg'),\r\n                    requirementLevel:60,\r\n                    exp: 80,\r\n                    cutTime: 12,\r\n                    reward: '紫衫木'    \r\n                },\r\n                '云杉': {\r\n                    name:'云杉',\r\n                    icon: require('@/assets/woodcutting/spruce_tree.svg'),\r\n                    requirementLevel:70,\r\n                    exp: 100,\r\n                    cutTime: 15,\r\n                    reward: '云杉原木'    \r\n                },\r\n                '菩提树': {\r\n                    name:'菩提树',\r\n                    icon: require('@/assets/woodcutting/linden_tree.svg'),\r\n                    requirementLevel:80,\r\n                    exp: 140,\r\n                    cutTime: 18,\r\n                    reward: '菩提原木'    \r\n                },\r\n                '接骨木树': {\r\n                    name:'接骨木树',\r\n                    icon: require('@/assets/woodcutting/elderwood_tree.svg'),\r\n                    requirementLevel:85,\r\n                    exp: 180,\r\n                    cutTime: 20,\r\n                    reward: '接骨木'    \r\n                },\r\n                '红木': {\r\n                    name:'红木',\r\n                    icon: require('@/assets/woodcutting/redwood_tree.svg'),\r\n                    requirementLevel:90,\r\n                    exp: 195,\r\n                    cutTime: 22,\r\n                    reward: '红木'    \r\n                },\r\n                '魔法树': {\r\n                    name:'魔法树',\r\n                    icon: require('@/assets/woodcutting/magic_tree.svg'),\r\n                    requirementLevel:95,\r\n                    exp: 225,\r\n                    cutTime: 25,\r\n                    reward: '魔法原木'    \r\n                },\r\n            },\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.trees{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    gap: 2rem;\r\n    width: 100%;\r\n    padding: 2rem;\r\n    box-sizing: border-box;\r\n}\r\n.treesContent{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    text-align: center;\r\n}\r\nimg{\r\n    height:2rem;\r\n    width: 2rem;\r\n}\r\n\r\n\r\n</style>"],"mappings":";;EAGOA,KAAK,EAAC;AAAO;;EAMPA,KAAK,EAAC;AAAc;;EAEdC,KAAK,EAAE;IAAAC,QAAA;EAAA;AAAmB;;EAC1BD,KAAK,EAAE;IAAAC,QAAA;EAAA;AAAmB;mBAZ7C;;;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAC6CC,sBAAA;IAD/B,aAAW,EAAE,MAAM;IAChC,YAAU,EAAE;MACfC,mBAAA,CAeM,OAfNC,UAeM,I,kBAdJL,mBAAA,CAacC,SAAA,QAjBlBK,WAAA,CAKuBC,KAAA,CAAAC,SAAS,EAAjBC,IAAI;yBADfC,YAAA,CAacP,sBAAA;MAXTQ,GAAG,EAAEF,IAAI,CAACG,IAAI;MACd,aAAW,EAAE,KAAK;MAClB,YAAU,EAAE;;MARrBC,OAAA,EAAAC,QAAA,CASQ,MAOM,CAPNV,mBAAA,CAOM,OAPNW,UAOM,G,0BANFX,mBAAA,CAA4C;QAArCN,KAAK,EAAE;UAAAC,QAAA;QAAA;MAAmB,GAAE,IAAE,sBACrCK,mBAAA,CAAyD,QAAzDY,UAAyD,EAAAC,gBAAA,CAAnBR,IAAI,CAACG,IAAI,kBAC/CR,mBAAA,CAA4E,QAA5Ec,UAA4E,EAAAD,gBAAA,CAAtCR,IAAI,CAACU,GAAG,IAAG,GAAC,GAAAF,gBAAA,CAAGR,IAAI,CAACW,OAAO,IAAG,GAAC,iBACrEhB,mBAAA,CAAmC,eAA7BA,mBAAA,CAAsB;QAAhBiB,GAAG,EAAEZ,IAAI,CAACa;8BAblCC,UAAA,E,GAcYrB,YAAA,CAA+BsB,wBAAA,G,0BAC/BpB,mBAAA,CAAa,uC;MAfzBqB,CAAA;;8DAmBErB,mBAAA,CAAqC;IAA/BN,KAAK,EAAE;MAAA4B,MAAA;IAAA;EAAgB,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}