{"ast":null,"code":"import { fishingGrounds, junkPack, spicialPack } from '../../../data/skillFishing.js';\nimport { useWarehouseStore } from '../../../stores/warehouse.js';\nimport fishingBlock from './fishingBlock.vue';\nexport default {\n  components: {\n    fishingBlock\n  },\n  setup() {\n    const WarehouseStore = useWarehouseStore();\n    const cumutiveProbablity = WarehouseStore.checkCumulativeProbabilities;\n    const addItem = WarehouseStore.addItem;\n    const openChest = WarehouseStore.openChest;\n    return {\n      cumutiveProbablity,\n      addItem,\n      openChest\n    };\n  },\n  data() {\n    return {\n      isWorked: false,\n      //管理定时器\n      timer: '',\n      groundIsWorked: '远洋',\n      fishIsHunted: '鲨鱼',\n      probabilityPool: [],\n      randomValue: 0,\n      fishingGrounds: fishingGrounds,\n      junkPack: junkPack,\n      spicialPack: spicialPack\n    };\n  },\n  methods: {\n    packThePackage(ground, fish) {\n      const fishDetail = this.fishingGrounds[ground].fishInGround[fish];\n      const rewardPackage = [fishDetail, this.junkPack, this.spicialPack];\n      // console.log(probabilityArr)\n      return rewardPackage;\n    },\n    getRandomFishInterval(min, max, randomValue) {\n      const fishInterval = (min + randomValue * (max - min)) * 1000;\n      return fishInterval;\n    }\n  },\n  watch: {\n    groundIsWorked(newVal) {\n      const probabilityArr = Object.values(this.fishingGrounds[newVal].catchProbabilities);\n      this.probabilityPool = probabilityArr;\n    },\n    fishIsHunted() {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n      if (this.fishIsHunted === '') return;\n      const rewardPackage = this.packThePackage(this.fishIsHunted, this.groundIsWorked);\n      const timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime, rewardPackage[0].maxTime, this.randomValue);\n      this.timer = setInterval(() => {\n        this.randomValue = Math.random();\n        const RandthisRound = this.cumutiveProbablity(this.probabilityPool, this.randomValue);\n        if (RandthisRound === 0) {\n          this.addItem(rewardPackage[0].name, rewardPackage[0].count);\n        } else {\n          this.openChest(rewardPackage[RandthisRound]);\n        }\n      }, timeThisRound);\n    }\n  }\n};","map":{"version":3,"names":["fishingGrounds","junkPack","spicialPack","useWarehouseStore","fishingBlock","components","setup","WarehouseStore","cumutiveProbablity","checkCumulativeProbabilities","addItem","openChest","data","isWorked","timer","groundIsWorked","fishIsHunted","probabilityPool","randomValue","methods","packThePackage","ground","fish","fishDetail","fishInGround","rewardPackage","getRandomFishInterval","min","max","fishInterval","watch","newVal","probabilityArr","Object","values","catchProbabilities","clearInterval","timeThisRound","minTime","maxTime","setInterval","Math","random","RandthisRound","name","count"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\skills\\skillFishing.vue"],"sourcesContent":["<template>\r\n<div class=\"fishingGrounds\">\r\n  <div class=\"helperSturcture\" v-for=\"ground in fishingGrounds\"\r\n    :key=\"ground.name\">\r\n  <fishing-block :fishing-ground=\"ground\">\r\n    @=\"\"\r\n  </fishing-block>\r\n  </div>\r\n</div>\r\n<button @click=\"packThePackage(groundIsWorked,fishIsHunted)\">test</button>\r\n</template>\r\n\r\n<script>\r\nimport { fishingGrounds,junkPack,spicialPack } from '../../../data/skillFishing.js';\r\nimport { useWarehouseStore } from '../../../stores/warehouse.js';\r\nimport fishingBlock from './fishingBlock.vue';\r\n\r\nexport default {\r\n  components: { fishingBlock },\r\n  setup() {\r\n    const WarehouseStore = useWarehouseStore();\r\n    const cumutiveProbablity = WarehouseStore.checkCumulativeProbabilities;\r\n    const addItem = WarehouseStore.addItem;\r\n    const openChest = WarehouseStore.openChest;\r\n    return{\r\n      cumutiveProbablity,\r\n      addItem,\r\n      openChest\r\n    }\r\n  },\r\n    data() {\r\n  return {\r\n    isWorked:false,//管理定时器\r\n    timer:'',\r\n    groundIsWorked:'远洋',\r\n    fishIsHunted:'鲨鱼',\r\n    probabilityPool:[],\r\n    randomValue:0,\r\n    fishingGrounds: fishingGrounds,\r\n    junkPack:junkPack,\r\n    spicialPack:spicialPack,\r\n  };\r\n},\r\nmethods: {\r\n  packThePackage(ground,fish){\r\n    const fishDetail = this.fishingGrounds[ground].fishInGround[fish];\r\n    const rewardPackage = [fishDetail,this.junkPack,this.spicialPack];\r\n    // console.log(probabilityArr)\r\n    return rewardPackage;\r\n     \r\n  },\r\n  getRandomFishInterval(min,max, randomValue){\r\n    const fishInterval = (min + randomValue*(max - min)) * 1000;\r\n    return fishInterval;\r\n  },\r\n\r\n},\r\nwatch:{\r\n  groundIsWorked(newVal){  \r\n    const probabilityArr = Object.values(this.fishingGrounds[newVal].catchProbabilities)\r\n    this.probabilityPool = probabilityArr;\r\n  },\r\n  fishIsHunted(){\r\n    if(this.timer){\r\n      clearInterval(this.timer);\r\n    }\r\n    if(this.fishIsHunted === '') return;\r\n    const rewardPackage = this.packThePackage(this.fishIsHunted,this.groundIsWorked);\r\n    const timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime,rewardPackage[0].maxTime,this.randomValue);\r\n    this.timer = setInterval(()=>{  \r\n      this.randomValue = Math.random();\r\n      const RandthisRound = this.cumutiveProbablity(this.probabilityPool,this.randomValue);\r\n      if(RandthisRound === 0){\r\n        this.addItem(rewardPackage[0].name, rewardPackage[0].count);\r\n      }else{\r\n        this.openChest(rewardPackage[RandthisRound]);\r\n      }\r\n    },timeThisRound)\r\n  }\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.fishingGrounds{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    gap: 1.5rem;\r\n    width: 100%;\r\n    padding: 1.5rem;\r\n    box-sizing: border-box;\r\n}\r\n.helperSturcture{\r\n  display: flex;\r\n  width: 48%;\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}