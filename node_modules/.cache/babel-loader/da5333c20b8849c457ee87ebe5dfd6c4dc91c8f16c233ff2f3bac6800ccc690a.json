{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  class: \"addNum\"\n};\nconst _hoisted_3 = {\n  class: \"totalNum\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.notifications, notification => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: notification.id,\n      class: \"notification\",\n      style: _normalizeStyle($options.notificationStyle)\n    }, [_createElementVNode(\"img\", {\n      src: notification.imageUrl\n    }, null, 8 /* PROPS */, _hoisted_1), _createElementVNode(\"span\", _hoisted_2, \"+\" + _toDisplayString(notification.addCount), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(notification.itemQuantity), 1 /* TEXT */)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$setup","notifications","notification","key","id","style","_normalizeStyle","$options","notificationStyle","_createElementVNode","src","imageUrl","_hoisted_1","_hoisted_2","_toDisplayString","addCount","_hoisted_3","itemQuantity"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\mainNotification.vue"],"sourcesContent":["<template>\r\n      <div\r\n        v-for=\"notification in notifications\"\r\n        :key=\"notification.id\"\r\n        class=\"notification\"\r\n        :style=\"notificationStyle\"\r\n      >\r\n        <img :src=\"notification.imageUrl\">  \r\n        <span class=\"addNum\">+{{notification.addCount}}</span> \r\n        <span class=\"totalNum\">{{ notification.itemQuantity }}</span>\r\n      </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { useWarehouseStore } from './stores/warehouse';\r\n  \r\n  export default {\r\n    setup() {\r\n      const notificationStore = useWarehouseStore();\r\n      const notifications = notificationStore.notifications;\r\n      return {\r\n        notifications,\r\n      };\r\n    },\r\n  \r\n    computed: {\r\n      notificationStyle() {\r\n        return {\r\n\r\n        };\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .notification {\r\n    display: flex;\r\n    flex-direction: row;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    color: white;\r\n    padding: 0.5rem;\r\n    border-radius: 0.25rem;\r\n    gap:0.1rem;\r\n    align-items: center;\r\n  }\r\n  img{\r\n    height: 1rem;\r\n    width: 1rem;\r\n  }\r\n  .addNum{\r\n    font-size: 0.75rem;\r\n    color: rgb(40,138,104);\r\n  }\r\n  .totalNum{\r\n    font-size: 1rem;\r\n    color: rgb(207,158,96);\r\n  }\r\n  rgb(27,158,19)\r\n  </style>\r\n  "],"mappings":";mBAAA;;EAQcA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAU;;2BARxBC,mBAAA,CASMC,SAAA,QAVZC,WAAA,CAE+BC,MAAA,CAAAC,aAAa,EAA7BC,YAAY;yBADrBL,mBAAA,CASM;MAPHM,GAAG,EAAED,YAAY,CAACE,EAAE;MACrBR,KAAK,EAAC,cAAc;MACnBS,KAAK,EALdC,eAAA,CAKgBC,QAAA,CAAAC,iBAAiB;QAEzBC,mBAAA,CAAkC;MAA5BC,GAAG,EAAER,YAAY,CAACS;4BAPhCC,UAAA,GAQQH,mBAAA,CAAsD,QAAtDI,UAAsD,EAAjC,GAAC,GAAAC,gBAAA,CAAEZ,YAAY,CAACa,QAAQ,kBAC7CN,mBAAA,CAA6D,QAA7DO,UAA6D,EAAAF,gBAAA,CAAnCZ,YAAY,CAACe,YAAY,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}