{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { itemList } from '../data/itemList';\nexport const useWarehouseStore = defineStore('warehouse', {\n  state: () => ({\n    capacity: 20,\n    coin: 0,\n    slayerCoin: 0,\n    items: new Map()\n  }),\n  actions: {\n    isWarehouseFull() {\n      return this.items.size >= this.capacity;\n    },\n    // 显示通知\n    showNotification(itemName, itemQuantity) {\n      if (this.currentNotification && this.currentNotification.itemName === itemName) {\n        // 如果是相同物品，更新数量并刷新计时器\n        this.currentNotification.itemQuantity = itemQuantity;\n        clearTimeout(this.notificationTimer);\n        this.startNotificationTimer(); // 重新计时\n      } else {\n        // 创建新通知\n        this.createNotification(itemName, itemQuantity);\n      }\n    },\n    createNotification(itemName, itemQuantity) {\n      if (notificationsMap[itemName]) {\n        // 更新已有泡泡的数量\n        const notification = notificationsMap[itemName];\n        notification.innerHTML = `${itemName}: ${itemQuantity}`;\n        clearTimeout(notification.timer); // 清除旧的计时器\n        // 重新设置计时器\n        notification.timer = setTimeout(() => {\n          document.body.removeChild(notification);\n          delete notificationsMap[itemName]; // 移除已删除的通知\n        }, 2000);\n        return;\n      }\n      // 创建通知元素\n      const notification = document.createElement('div');\n      notification.innerHTML = `${itemName}: ${itemQuantity}`;\n      notification.style.position = 'fixed';\n      // notification.style.bottom = '-50px';\n      notification.style.left = '50%';\n      // notification.style.transform = 'translateX(-50%)';\n      notification.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n      notification.style.color = 'white';\n      notification.style.padding = '10px';\n      notification.style.borderRadius = '5px';\n      // notification.style.transition = 'bottom 0.5s ease-in-out';\n      document.body.appendChild(notification);\n\n      // 移动到屏幕底部\n      // setTimeout(() => {\n      //   notification.style.bottom = '20px';\n      // }, 50);\n\n      // 保存当前通知\n      this.currentNotification = {\n        itemName,\n        itemQuantity\n      };\n\n      // 开始计时器，2秒后隐藏\n      this.startNotificationTimer(notification);\n    },\n    startNotificationTimer(notification) {\n      this.notificationTimer = setTimeout(() => {\n        // 隐藏并删除通知\n        notification.style.bottom = '-50px';\n        setTimeout(() => {\n          document.body.removeChild(notification);\n        }, 500);\n\n        // 重置当前通知\n        this.currentNotification = null;\n      }, 2000); // 2秒后消失\n    },\n    addItem(itemId, count) {\n      const itemDetails = itemList[itemId];\n      if (!itemDetails) {\n        console.error('Item not found in item list:', itemId);\n        return;\n      }\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\n        console.log('Warehouse is full. Cannot add new item type.');\n        return;\n      }\n      const currentItem = this.items.get(itemId);\n      if (currentItem) {\n        currentItem.count += count;\n      } else {\n        const newitem = {\n          count: 0,\n          ...itemDetails\n        };\n        newitem.count += count;\n        this.items.set(itemId, newitem);\n        console.log(`Added ${count} ${itemDetails.name}(s) to the warehouse.`);\n        console.log(this.items);\n      }\n      this.showNotification(itemDetails.name, this.items.get(itemId).count);\n    },\n    costItem(itemId, count) {\n      const targetItem = this.items.get(itemId);\n      if (targetItem.count < count) {\n        console.log(`Action failed , the number of ${targetItem.name} is not enough`);\n        return;\n      }\n      targetItem.count -= count;\n      if (targetItem.count === 0) {\n        this.items.delete(itemId);\n      }\n    },\n    getItemNumber(itemId) {\n      const thisItem = this.items.get(itemId);\n      return thisItem ? thisItem.count : 0;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","itemList","useWarehouseStore","state","capacity","coin","slayerCoin","items","Map","actions","isWarehouseFull","size","showNotification","itemName","itemQuantity","currentNotification","clearTimeout","notificationTimer","startNotificationTimer","createNotification","notificationsMap","notification","innerHTML","timer","setTimeout","document","body","removeChild","createElement","style","position","left","backgroundColor","color","padding","borderRadius","appendChild","bottom","addItem","itemId","count","itemDetails","console","error","has","log","currentItem","get","newitem","set","name","costItem","targetItem","delete","getItemNumber","thisItem"],"sources":["C:/Users/10433/Downloads/vues/vue-cli-01-a-new-vue-project/src/stores/warehouse.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { itemList } from '../data/itemList';\r\n\r\nexport const useWarehouseStore = defineStore('warehouse', {\r\n  state: () => ({\r\n    capacity: 20,\r\n    coin:0,\r\n    slayerCoin:0,\r\n    items: new Map(),\r\n  }),\r\n\r\n  actions: {\r\n    isWarehouseFull() {\r\n        return this.items.size >= this.capacity;\r\n    },\r\n    // 显示通知\r\n    showNotification(itemName, itemQuantity) {\r\n      if (this.currentNotification && this.currentNotification.itemName === itemName) {\r\n        // 如果是相同物品，更新数量并刷新计时器\r\n        this.currentNotification.itemQuantity = itemQuantity;\r\n        clearTimeout(this.notificationTimer);\r\n        this.startNotificationTimer(); // 重新计时\r\n      } else {\r\n        // 创建新通知\r\n        this.createNotification(itemName, itemQuantity);\r\n      }\r\n    },\r\n\r\n    createNotification(itemName, itemQuantity) {\r\n      if (notificationsMap[itemName]) {\r\n        // 更新已有泡泡的数量\r\n        const notification = notificationsMap[itemName];\r\n        notification.innerHTML = `${itemName}: ${itemQuantity}`;\r\n        clearTimeout(notification.timer); // 清除旧的计时器\r\n        // 重新设置计时器\r\n        notification.timer = setTimeout(() => {\r\n          document.body.removeChild(notification);\r\n          delete notificationsMap[itemName]; // 移除已删除的通知\r\n        }, 2000);\r\n        return;\r\n      }\r\n      // 创建通知元素\r\n      const notification = document.createElement('div');\r\n      notification.innerHTML = `${itemName}: ${itemQuantity}`;\r\n      notification.style.position = 'fixed';\r\n      // notification.style.bottom = '-50px';\r\n      notification.style.left = '50%';\r\n      // notification.style.transform = 'translateX(-50%)';\r\n      notification.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\r\n      notification.style.color = 'white';\r\n      notification.style.padding = '10px';\r\n      notification.style.borderRadius = '5px';\r\n      // notification.style.transition = 'bottom 0.5s ease-in-out';\r\n      document.body.appendChild(notification);\r\n\r\n      // 移动到屏幕底部\r\n      // setTimeout(() => {\r\n      //   notification.style.bottom = '20px';\r\n      // }, 50);\r\n\r\n      // 保存当前通知\r\n      this.currentNotification = { itemName, itemQuantity };\r\n\r\n      // 开始计时器，2秒后隐藏\r\n      this.startNotificationTimer(notification);\r\n    },\r\n\r\n    startNotificationTimer(notification) {\r\n      this.notificationTimer = setTimeout(() => {\r\n        // 隐藏并删除通知\r\n        notification.style.bottom = '-50px';\r\n        setTimeout(() => {\r\n          document.body.removeChild(notification);\r\n        }, 500);\r\n\r\n        // 重置当前通知\r\n        this.currentNotification = null;\r\n      }, 2000); // 2秒后消失\r\n    },\r\n    \r\n    addItem(itemId, count) {\r\n      const itemDetails = itemList[itemId];\r\n      if (!itemDetails) {\r\n        console.error('Item not found in item list:', itemId);\r\n        return;\r\n      }\r\n\r\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\r\n        console.log('Warehouse is full. Cannot add new item type.');\r\n        return;\r\n      }\r\n      const currentItem = this.items.get(itemId) \r\n      if(currentItem){\r\n        currentItem.count += count;\r\n      }else{\r\n        const newitem = {count: 0, ...itemDetails};\r\n        newitem.count += count;\r\n        this.items.set(itemId, newitem);\r\n        console.log(`Added ${count} ${itemDetails.name}(s) to the warehouse.`);\r\n        console.log(this.items);\r\n      }\r\n      this.showNotification(itemDetails.name, this.items.get(itemId).count);\r\n    },\r\n    costItem(itemId, count){\r\n        const targetItem = this.items.get(itemId);\r\n        if(targetItem.count < count){\r\n            console.log(`Action failed , the number of ${targetItem.name} is not enough`);\r\n            return\r\n        }\r\n        targetItem.count -= count;\r\n        if(targetItem.count === 0){\r\n            this.items.delete(itemId); \r\n        }\r\n    },\r\n    getItemNumber(itemId) {\r\n      const thisItem = this.items.get(itemId);\r\n      return thisItem ? thisItem.count : 0;\r\n    },\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}