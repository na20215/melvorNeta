{"ast":null,"code":"import { levelList } from '../../../data/levelList.js';\nimport { fishingGrounds, junkPack, spicialPack } from '../../../data/skillFishing.js';\nimport { useSkillStore } from '../../../stores/expPark.js';\nimport { useWarehouseStore } from '../../../stores/warehouse.js';\nimport fishingBlock from './fishingBlock.vue';\nimport { computed } from 'vue';\nexport default {\n  components: {\n    fishingBlock\n  },\n  setup() {\n    const WarehouseStore = useWarehouseStore();\n    const SkillStore = useSkillStore();\n    const activeSkill = SkillStore.activeSkill;\n    const cumutiveProbablity = WarehouseStore.checkCumulativeProbabilities;\n    const addItem = WarehouseStore.addItem;\n    const openChest = WarehouseStore.openChest;\n    const addExp = SkillStore.addExp;\n    const getMasteryExp = SkillStore.getMasteryExp;\n    const addMasteryPool = SkillStore.addMasteryPoolExp;\n    return {\n      cumutiveProbablity,\n      addItem,\n      openChest,\n      addExp,\n      getMasteryExp,\n      addMasteryPool,\n      activeSkill\n    };\n  },\n  data() {\n    return {\n      timer: '',\n      groundIsWorked: '',\n      fishIsHunted: '',\n      probabilityPool: [],\n      fishingGrounds: fishingGrounds,\n      junkPack: junkPack,\n      spicialPack: spicialPack\n    };\n  },\n  methods: {\n    packThePackage(ground, fish) {\n      const fishDetail = this.fishingGrounds[ground].fishInGround[fish];\n      const rewardPackage = [fishDetail, this.junkPack, this.spicialPack];\n      return rewardPackage;\n    },\n    getRandomFishInterval(min, max, randomValue) {\n      const fishInterval = (min + randomValue * (max - min)) * 1000;\n      return fishInterval;\n    },\n    getFishingTarget(data) {\n      this.groundIsWorked = data['groundName'];\n      this.fishIsHunted = data['fishName'];\n    },\n    stopFishing() {\n      // console.log(\"stopfishing 在skillfishing触发了！\")\n      this.groundIsWorked = '';\n      this.fishIsHunted = '';\n    },\n    addMasteryExp(fish) {\n      fish.masteryExp += fish.addMasteryExp;\n      if (fish.masteryExp >= levelList[fish.masteryLevel]) {\n        fish.masteryLevel++;\n        const averageTime = (fish.maxTime + fish.minTime) / 2;\n        fish.addMasteryExp = Math.round(this.getMasteryExp(fish.masteryLevel, 23, averageTime));\n        fish.addMasteryPoolExp = Math.ceil(fish.addMasteryExp / 4);\n      }\n    }\n  },\n  computed: {},\n  watch: {\n    '$store.activeSkill'(newVal) {\n      console.log(`activeskill更新了：${this.activeSkill}`);\n      if (newVal !== '钓鱼') {\n        this.stopFishing();\n      }\n    },\n    groundIsWorked(newVal) {\n      if (newVal === '') return;\n      const probabilityArr = Object.values(this.fishingGrounds[newVal].catchProbabilities);\n      this.probabilityPool = probabilityArr;\n    },\n    fishIsHunted() {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n      if (this.fishIsHunted === '') return;\n      this.activeSkill = '钓鱼';\n      const rewardPackage = this.packThePackage(this.groundIsWorked, this.fishIsHunted);\n      let randomValue = Math.random();\n      let timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime, rewardPackage[0].maxTime, randomValue);\n      this.timer = setInterval(() => {\n        randomValue = Math.random();\n        timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime, rewardPackage[0].maxTime, randomValue);\n        const RandThisRound = this.cumutiveProbablity(this.probabilityPool, randomValue);\n        if (RandThisRound === 0) {\n          this.addItem(rewardPackage[0].name, rewardPackage[0].count);\n          this.addExp('钓鱼', rewardPackage[0].exp);\n          this.addMasteryExp(rewardPackage[0]);\n          this.addMasteryPool('钓鱼', rewardPackage[0].addMasteryPoolExp);\n        } else {\n          this.openChest(rewardPackage[RandThisRound]);\n        }\n      }, timeThisRound);\n    }\n  }\n};","map":{"version":3,"names":["levelList","fishingGrounds","junkPack","spicialPack","useSkillStore","useWarehouseStore","fishingBlock","computed","components","setup","WarehouseStore","SkillStore","activeSkill","cumutiveProbablity","checkCumulativeProbabilities","addItem","openChest","addExp","getMasteryExp","addMasteryPool","addMasteryPoolExp","data","timer","groundIsWorked","fishIsHunted","probabilityPool","methods","packThePackage","ground","fish","fishDetail","fishInGround","rewardPackage","getRandomFishInterval","min","max","randomValue","fishInterval","getFishingTarget","stopFishing","addMasteryExp","masteryExp","masteryLevel","averageTime","maxTime","minTime","Math","round","ceil","watch","$store.activeSkill","newVal","console","log","probabilityArr","Object","values","catchProbabilities","clearInterval","random","timeThisRound","setInterval","RandThisRound","name","count","exp"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\skills\\skillFishing.vue"],"sourcesContent":["<template>\r\n<div class=\"fishingGrounds\">\r\n  <div class=\"helperSturcture\" v-for=\"ground in fishingGrounds\"\r\n    :key=\"ground.name\">\r\n  <fishing-block \r\n  :fishing-ground=\"ground\"\r\n  :ground-is-worked=\"groundIsWorked\"\r\n  @stop-fishing=\"stopFishing\"\r\n  @add-ground-name=\"getFishingTarget\">\r\n  </fishing-block>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { levelList } from '../../../data/levelList.js';\r\nimport { fishingGrounds,junkPack,spicialPack } from '../../../data/skillFishing.js';\r\nimport { useSkillStore } from '../../../stores/expPark.js';\r\nimport { useWarehouseStore } from '../../../stores/warehouse.js';\r\nimport fishingBlock from './fishingBlock.vue';\r\nimport { computed } from 'vue';\r\nexport default {\r\n  components: { fishingBlock },\r\n  setup() {\r\n    const WarehouseStore = useWarehouseStore();\r\n    const SkillStore = useSkillStore();\r\n    const activeSkill = SkillStore.activeSkill;\r\n    const cumutiveProbablity = WarehouseStore.checkCumulativeProbabilities;\r\n    const addItem = WarehouseStore.addItem;\r\n    const openChest = WarehouseStore.openChest;\r\n    const addExp = SkillStore.addExp;\r\n    const getMasteryExp = SkillStore.getMasteryExp;\r\n    const addMasteryPool = SkillStore.addMasteryPoolExp;\r\n    return{\r\n      cumutiveProbablity,\r\n      addItem,\r\n      openChest,\r\n      addExp,\r\n      getMasteryExp,\r\n      addMasteryPool,\r\n      activeSkill\r\n      \r\n    }\r\n  },\r\n    data() {\r\n  return {\r\n    timer:'',\r\n    groundIsWorked:'',\r\n    fishIsHunted:'',\r\n    probabilityPool:[],\r\n    fishingGrounds: fishingGrounds,\r\n    junkPack:junkPack,\r\n    spicialPack:spicialPack,\r\n  };\r\n},\r\nmethods: {\r\n  packThePackage(ground,fish){\r\n    const fishDetail = this.fishingGrounds[ground].fishInGround[fish];\r\n    const rewardPackage = [fishDetail,this.junkPack,this.spicialPack];\r\n    return rewardPackage;\r\n     \r\n  },\r\n  getRandomFishInterval(min,max, randomValue){\r\n    const fishInterval = (min + randomValue*(max - min)) * 1000;\r\n    return fishInterval;\r\n  },\r\n  getFishingTarget(data){\r\n    this.groundIsWorked = data['groundName'];\r\n    this.fishIsHunted = data['fishName'];\r\n  },\r\n  stopFishing(){\r\n    // console.log(\"stopfishing 在skillfishing触发了！\")\r\n    this.groundIsWorked ='';\r\n    this.fishIsHunted='';\r\n  },\r\n  addMasteryExp(fish){\r\n        fish.masteryExp += fish.addMasteryExp;\r\n        if(fish.masteryExp >= levelList[fish.masteryLevel]){\r\n          fish.masteryLevel++;\r\n          const averageTime = (fish.maxTime + fish.minTime)/2;\r\n          fish.addMasteryExp = Math.round(this.getMasteryExp(fish.masteryLevel,23,averageTime));\r\n          fish.addMasteryPoolExp = Math.ceil(fish.addMasteryExp/4);\r\n        }\r\n    }\r\n},\r\ncomputed:{\r\n\r\n},\r\n\r\nwatch:{\r\n  '$store.activeSkill'(newVal){\r\n    console.log(`activeskill更新了：${this.activeSkill}`)\r\n            if(newVal !== '钓鱼'){\r\n              this.stopFishing();\r\n            }\r\n        },\r\n  groundIsWorked(newVal){ \r\n    if(newVal === '') return;\r\n    const probabilityArr = Object.values(this.fishingGrounds[newVal].catchProbabilities)\r\n    this.probabilityPool = probabilityArr;\r\n  },\r\n  fishIsHunted(){\r\n    if(this.timer){\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n    if(this.fishIsHunted === '') return;\r\n    this.activeSkill = '钓鱼';\r\n    const rewardPackage = this.packThePackage(this.groundIsWorked,this.fishIsHunted);\r\n    let randomValue = Math.random();\r\n    let timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime,rewardPackage[0].maxTime,randomValue);\r\n    this.timer = setInterval(()=>{  \r\n      randomValue = Math.random();\r\n      timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime,rewardPackage[0].maxTime,randomValue);\r\n      const RandThisRound = this.cumutiveProbablity(this.probabilityPool,randomValue);\r\n      if(RandThisRound === 0){\r\n        this.addItem(rewardPackage[0].name, rewardPackage[0].count);\r\n        this.addExp('钓鱼',rewardPackage[0].exp);\r\n        this.addMasteryExp(rewardPackage[0]);\r\n        this.addMasteryPool('钓鱼',rewardPackage[0].addMasteryPoolExp)\r\n      }else{\r\n        this.openChest(rewardPackage[RandThisRound]);\r\n      }\r\n    },timeThisRound)\r\n  }\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.fishingGrounds{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    gap: 1.5rem;\r\n    width: 100%;\r\n    padding: 1.5rem;\r\n    box-sizing: border-box;\r\n}\r\n.helperSturcture{\r\n  display: flex;\r\n  width: 48%;\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}