{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.state.isVisble ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"overlay\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.close && $setup.close(...args))\n  }, [_createVNode(_Transition, {\n    name: \"window-slide\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", {\n      class: \"content\",\n      onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"])),\n      onTransitionstart: _cache[2] || (_cache[2] = (...args) => $setup.onTransitionStart && $setup.onTransitionStart(...args))\n    }, [_createElementVNode(\"span\", {\n      class: \"close-btn\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $setup.close && $setup.close(...args))\n    }, \"X\"), _cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n      class: \"guide\"\n    }, \"游戏指南\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n      class: \"popup-content\"\n    }, [_createElementVNode(\"p\", null, \"这里是弹出的内容\")], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$setup","state","isVisble","_createElementBlock","key","class","onClick","_cache","args","close","_createVNode","_Transition","name","default","_withCtx","_createElementVNode","_withModifiers","onTransitionstart","onTransitionStart","_","_createCommentVNode"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\baseHelpPage.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"state.isVisble\" class=\"overlay\" @click=\"close\">\r\n      <transition name=\"window-slide\">\r\n        <div class=\"content\" @click.stop @transitionstart=\"onTransitionStart\">\r\n          <span class=\"close-btn\" @click=\"close\">X</span>\r\n          <span class=\"guide\">游戏指南</span>\r\n          <div class=\"popup-content\">\r\n            <p>这里是弹出的内容</p>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { watch, inject } from 'vue';\r\n  \r\n  export default {\r\n    setup() {\r\n      const state = inject('state');\r\n      console.log('初始状态：', state.isVisble);\r\n  \r\n      const close = () => {\r\n        state.isVisble = false;\r\n      }\r\n  \r\n      const onTransitionStart = (event) => {\r\n        console.log('动画开始', event);\r\n      };\r\n  \r\n      watch(() => state.isVisble, (newVal) => {\r\n        console.log('isVisble changed:', newVal);\r\n        if (newVal) {\r\n          setTimeout(() => {\r\n            // 这里手动触发动画，确保过渡已经准备好\r\n          }, 50);\r\n        }\r\n      });\r\n  \r\n      return { state, close, onTransitionStart };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 背景遮罩 */\r\n  .overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    justify-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .overlay > .content {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3rem;\r\n    margin: 2rem;\r\n    width: 50%;\r\n    background-color: rgb(35, 42, 53);\r\n  }\r\n  \r\n  .guide {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 900;\r\n    letter-spacing: 0.5rem;\r\n  }\r\n  \r\n  .close-btn {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 1rem;\r\n    right: 1rem;\r\n    color: black;\r\n    background: none;\r\n    border: none;\r\n    border-radius: 1rem;\r\n    font-weight: bolder;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  /* 动画过渡效果 */\r\n  .window-slide-enter-active, .window-slide-leave-active {\r\n    transition: transform 1s ease-in, opacity 1s ease-out;\r\n  }\r\n  \r\n  .window-slide-enter, .window-slide-leave-to {\r\n    transform: translateY(-100%); /* 初始位置和离开时的位移 */\r\n    opacity: 0;\r\n  }\r\n  \r\n  .window-slide-enter-to, .window-slide-leave {\r\n    transform: translateY(0); /* 动画结束时，位置应在屏幕中 */\r\n    opacity: 1;\r\n  }\r\n  </style>\r\n  "],"mappings":";;SACeA,MAAA,CAAAC,KAAK,CAACC,QAAQ,I,cAAzBC,mBAAA,CAUM;IAXVC,GAAA;IAC+BC,KAAK,EAAC,SAAS;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,MAAA,CAAAS,KAAA,IAAAT,MAAA,CAAAS,KAAA,IAAAD,IAAA,CAAK;MACtDE,YAAA,CAQaC,WAAA;IARDC,IAAI,EAAC;EAAc;IAFrCC,OAAA,EAAAC,QAAA,CAGQ,MAMM,CANNC,mBAAA,CAMM;MANDV,KAAK,EAAC,SAAS;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAHnCS,cAAA,CAG6B,QAAW;MAAEC,iBAAe,EAAAV,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,MAAA,CAAAkB,iBAAA,IAAAlB,MAAA,CAAAkB,iBAAA,IAAAV,IAAA,CAAiB;QAClEO,mBAAA,CAA+C;MAAzCV,KAAK,EAAC,WAAW;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,MAAA,CAAAS,KAAA,IAAAT,MAAA,CAAAS,KAAA,IAAAD,IAAA,CAAK;OAAE,GAAC,G,0BACxCO,mBAAA,CAA+B;MAAzBV,KAAK,EAAC;IAAO,GAAC,MAAI,sB,0BACxBU,mBAAA,CAEM;MAFDV,KAAK,EAAC;IAAe,IACxBU,mBAAA,CAAe,WAAZ,UAAQ,E;IAPvBI,CAAA;UAAAC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}