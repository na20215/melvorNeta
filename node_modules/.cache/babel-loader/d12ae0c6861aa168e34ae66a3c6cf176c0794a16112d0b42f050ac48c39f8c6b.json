{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"window-slide\"\n  }, {\n    default: _withCtx(() => [$setup.state.isVisble ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"overlay\",\n      onClick: _cache[2] || (_cache[2] = (...args) => $setup.close && $setup.close(...args)),\n      style: _normalizeStyle({\n        zIndex: $setup.state.isVisble ? '100' : '-1'\n      })\n    }, [$setup.state.isVisble ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"content\",\n      onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.close && $setup.close(...args), [\"stop\"]))\n    }, [_createElementVNode(\"span\", {\n      class: \"close-btn\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $setup.close && $setup.close(...args))\n    }, \"X\"), _cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n      class: \"guide\"\n    }, \"游戏指南\", -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n      class: \"popup-content\"\n    }, [_createElementVNode(\"p\", null, \"这里是弹出的内容\")], -1 /* HOISTED */))])) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_Transition","name","default","_withCtx","$setup","state","isVisble","_createElementBlock","key","class","onClick","_cache","args","close","style","_normalizeStyle","zIndex","_withModifiers","_createElementVNode","_createCommentVNode","_"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\baseHelpPage.vue"],"sourcesContent":["<template>\r\n          \r\n          <transition name=\"window-slide\"> \r\n  <div v-if=\"state.isVisble\" class=\"overlay\" @click=\"close\" :style=\"{ zIndex: state.isVisble ? '100' : '-1' }\">\r\n\r\n    <div v-if=\"state.isVisble\" class=\"content\" @click.stop=\"close\">  \r\n        <span class=\"close-btn\" @click=\"close\">X</span>\r\n        <span class=\"guide\">游戏指南</span>\r\n      <div class=\"popup-content\">\r\n        \r\n        <p>这里是弹出的内容</p>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</transition>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { watch } from 'vue';\r\nimport { inject } from 'vue';\r\nexport default {\r\n    setup(){\r\n        const state = inject('state');\r\n        console.log('初始状态：', state.isVisble);\r\n        const close = () => {\r\n            state.isVisble = false;\r\n        }\r\n        const onTransitionStart = (event) => {\r\n      console.log('动画开始', event);\r\n      debugger; // 打断点确认动画触发\r\n    };\r\n    watch(() => state.isVisble, (newVal) => {\r\n  console.log('isVisble changed:', newVal);\r\n  if (newVal) {\r\n    setTimeout(() => {\r\n      // 这里手动触发动画，确保过渡已经准备好\r\n    }, 50);}\r\n    });\r\n        return{state, close, onTransitionStart}\r\n    },\r\n    props:{\r\n        // position: {\r\n        //     type: Object,\r\n        //     default: () => ({ left: '0px', top: '0px' })\r\n        // },\r\n\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 背景遮罩 */\r\n.overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  justify-items: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.overlay > .content{\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3rem;\r\n    margin: 2rem;\r\n    width: 50%;\r\n    \r\n    background-color: rgb(35, 42, 53);\r\n\r\n\r\n}\r\n.guide{\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 900;\r\n    letter-spacing: 0.5rem;\r\n    \r\n}\r\n.close-btn {\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  color: black;\r\n  background: none;\r\n  border: none;\r\n  border-radius: 1rem;\r\n  font-weight:bolder;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 动画过渡效果 */\r\n\r\n\r\n\r\n\r\n/* 动画进行中的状态 */\r\n.window-slide-enter-active, .window-slide-leave-active {\r\n  transition: transform 5s ease, opacity 5s ease;\r\n}\r\n\r\n/* 动画结束时的最终状态 */\r\n.window-slide-enter-to {\r\n  transform: translateY(0); /* 进入时最终位置是屏幕内 */\r\n  opacity: 1; /* 进入时变为不透明 */\r\n}\r\n\r\n\r\n.window-slide-leave-to {\r\n  transform: translateY(100%); /* 进入时从上方滑动 */\r\n  opacity: 0; /* 进入时完全透明 */\r\n}\r\n</style>\r\n"],"mappings":";;uBAEUA,YAAA,CAaGC,WAAA;IAbSC,IAAI,EAAC;EAAc;IAFzCC,OAAA,EAAAC,QAAA,CAGE,MAWM,CAXKC,MAAA,CAAAC,KAAK,CAACC,QAAQ,I,cAAzBC,mBAAA,CAWM;MAdRC,GAAA;MAG6BC,KAAK,EAAC,SAAS;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,MAAA,CAAAS,KAAA,IAAAT,MAAA,CAAAS,KAAA,IAAAD,IAAA,CAAK;MAAGE,KAAK,EAHlEC,eAAA;QAAAC,MAAA,EAG8EZ,MAAA,CAAAC,KAAK,CAACC,QAAQ;MAAA;QAE7EF,MAAA,CAAAC,KAAK,CAACC,QAAQ,I,cAAzBC,mBAAA,CAOM;MAZVC,GAAA;MAK+BC,KAAK,EAAC,SAAS;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MALrDM,cAAA,KAAAL,IAAA,KAK4DR,MAAA,CAAAS,KAAA,IAAAT,MAAA,CAAAS,KAAA,IAAAD,IAAA,CAAK;QACzDM,mBAAA,CAA+C;MAAzCT,KAAK,EAAC,WAAW;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,MAAA,CAAAS,KAAA,IAAAT,MAAA,CAAAS,KAAA,IAAAD,IAAA,CAAK;OAAE,GAAC,G,0BACxCM,mBAAA,CAA+B;MAAzBT,KAAK,EAAC;IAAO,GAAC,MAAI,sB,0BAC1BS,mBAAA,CAGM;MAHDT,KAAK,EAAC;IAAe,IAExBS,mBAAA,CAAe,WAAZ,UAAQ,E,0BAVnBC,mBAAA,e,oBAAAA,mBAAA,e;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}