{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport { itemList } from '../data/itemList';\nexport const useWarehouseStore = defineStore('warehouse', {\n  state: () => ({\n    capacity: 20,\n    coin: 0,\n    slayerCoin: 0,\n    items: new Map(),\n    notifications: []\n  }),\n  actions: {\n    isWarehouseFull() {\n      return this.items.size >= this.capacity;\n    },\n    // 显示通知\n    addNotification(itemName, addCount, itemQuantity) {\n      const existingNotification = this.notifications.find(notification => notification.itemName === itemName);\n      if (existingNotification) {\n        clearTimeout(existingNotification.timer);\n        existingNotification.addCount += addCount;\n        existingNotification.itemQuantity = itemQuantity;\n        existingNotification.timer = setTimeout(() => {\n          this.removeNotification(existingNotification.id);\n          console.log(`remove new El: ${this.notifications}`);\n        }, 2000);\n        return;\n      } else {\n        const notification = {\n          itemName,\n          addCount,\n          itemQuantity,\n          id: Date.now(),\n          timer: null\n        };\n        this.notifications.push(notification);\n        console.log(`add new El: ${this.notifications}`);\n        notification.timer = setTimeout(() => {\n          this.removeNotification(notification.id);\n          console.log(`remove new El: ${this.notifications}`);\n        }, 2000);\n      }\n    },\n    removeNotification(id) {\n      const index = this.notifications.findIndex(notification => notification.id === id);\n      if (index !== -1) {\n        this.notifications.splice(index, 1);\n      }\n    },\n    addItem(itemId, count) {\n      const itemDetails = itemList[itemId];\n      if (!itemDetails) {\n        console.error('Item not found in item list:', itemId);\n        return;\n      }\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\n        console.log('Warehouse is full. Cannot add new item type.');\n        return;\n      }\n      const currentItem = this.items.get(itemId);\n      if (currentItem) {\n        currentItem.quantity += count;\n      } else {\n        const newItem = {\n          quantity: 0,\n          ...itemDetails\n        };\n        newItem.quantity += count;\n        this.items.set(itemId, newItem);\n      }\n\n      // 调用显示通知\n    },\n    // 消耗物品\n    costItem(itemId, count) {\n      const targetItem = this.items.get(itemId);\n      if (targetItem.count < count) {\n        console.log(`Action failed, the number of ${targetItem.name} is not enough`);\n        return;\n      }\n      targetItem.count -= count;\n      if (targetItem.count === 0) {\n        this.items.delete(itemId);\n      }\n    },\n    // 获取物品数量\n    getItemNumber(itemId) {\n      const thisItem = this.items.get(itemId);\n      return thisItem ? thisItem.count : 0;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","itemList","useWarehouseStore","state","capacity","coin","slayerCoin","items","Map","notifications","actions","isWarehouseFull","size","addNotification","itemName","addCount","itemQuantity","existingNotification","find","notification","clearTimeout","timer","setTimeout","removeNotification","id","console","log","Date","now","push","index","findIndex","splice","addItem","itemId","count","itemDetails","error","has","currentItem","get","quantity","newItem","set","costItem","targetItem","name","delete","getItemNumber","thisItem"],"sources":["C:/Users/10433/Downloads/vues/vue-cli-01-a-new-vue-project/src/stores/warehouse.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { itemList } from '../data/itemList';\r\n\r\nexport const useWarehouseStore = defineStore('warehouse', {\r\n  state: () => ({\r\n    capacity: 20,\r\n    coin: 0,\r\n    slayerCoin: 0,\r\n    items: new Map(),\r\n    notifications: [],\r\n  }),\r\n\r\n  actions: {\r\n    isWarehouseFull() {\r\n      return this.items.size >= this.capacity;\r\n    },\r\n\r\n    // 显示通知\r\n    addNotification(itemName, addCount, itemQuantity) {\r\n      const existingNotification = this.notifications.find(notification => notification.itemName === itemName);\r\n      if(existingNotification){\r\n        clearTimeout(existingNotification.timer);\r\n        existingNotification.addCount += addCount;\r\n        existingNotification.itemQuantity = itemQuantity;\r\n        existingNotification.timer = setTimeout(() => {\r\n          this.removeNotification(existingNotification.id);\r\n          console.log(`remove new El: ${this.notifications}`)\r\n        }, 2000);\r\n        return;\r\n      }else{\r\n        const notification = {\r\n          itemName,\r\n          addCount,\r\n          itemQuantity,\r\n          id: Date.now(),\r\n          timer: null,\r\n        };\r\n        this.notifications.push(notification);\r\n        console.log(`add new El: ${this.notifications}`)\r\n        notification.timer = setTimeout(() => {\r\n          this.removeNotification(notification.id);\r\n          console.log(`remove new El: ${this.notifications}`)\r\n        }, 2000);\r\n      }  \r\n    },\r\n\r\n    removeNotification(id) {\r\n      const index = this.notifications.findIndex(notification => notification.id === id);\r\n      if (index !== -1) {\r\n        this.notifications.splice(index, 1);\r\n      }\r\n    },\r\n\r\n    addItem(itemId, count) {\r\n      const itemDetails = itemList[itemId];\r\n      if (!itemDetails) {\r\n        console.error('Item not found in item list:', itemId);\r\n        return;\r\n      }\r\n\r\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\r\n        console.log('Warehouse is full. Cannot add new item type.');\r\n        return;\r\n      }\r\n\r\n      const currentItem = this.items.get(itemId);\r\n      if (currentItem) {\r\n        currentItem.quantity += count;\r\n      } else {\r\n        const newItem = { quantity: 0, ...itemDetails };\r\n        newItem.quantity += count;\r\n        this.items.set(itemId, newItem);\r\n      }\r\n\r\n      // 调用显示通知\r\n\r\n    },\r\n\r\n    // 消耗物品\r\n    costItem(itemId, count) {\r\n      const targetItem = this.items.get(itemId);\r\n      if (targetItem.count < count) {\r\n        console.log(`Action failed, the number of ${targetItem.name} is not enough`);\r\n        return;\r\n      }\r\n      targetItem.count -= count;\r\n      if (targetItem.count === 0) {\r\n        this.items.delete(itemId);\r\n      }\r\n    },\r\n\r\n    // 获取物品数量\r\n    getItemNumber(itemId) {\r\n      const thisItem = this.items.get(itemId);\r\n      return thisItem ? thisItem.count : 0;\r\n    },\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}