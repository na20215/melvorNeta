{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BasicInfoBlock from '../basicInfoBlock.vue';\nimport cuttingBlock from './cuttingBlock.vue';\nimport { useWarehouseStore } from '../../../stores/warehouse';\nexport default {\n  components: {\n    cuttingBlock,\n    BasicInfoBlock\n  },\n  setup() {\n    const WarehouseStore = useWarehouseStore();\n    const addItem = WarehouseStore.addItem;\n    return {\n      addItem\n    };\n  },\n  data() {\n    return {\n      isActived: [],\n      timer: null,\n      DoubleCutting: true,\n      treesData: {\n        '普通树': {\n          name: '普通树',\n          icon: require('@/assets/woodcutting/normal_tree.svg'),\n          requirementLevel: 1,\n          exp: 10,\n          cutTime: 3,\n          isActive: false,\n          reward: '普通原木',\n          rewardIcon: require('@/assets/bank/logs_normal.png')\n        },\n        '橡树': {\n          name: '橡树',\n          icon: require('@/assets/woodcutting/oak_tree.svg'),\n          requirementLevel: 10,\n          exp: 15,\n          cutTime: 4,\n          isActive: false,\n          reward: '橡木',\n          rewardIcon: require('@/assets/bank/logs_oak.png')\n        },\n        '柳树': {\n          name: '柳树',\n          icon: require('@/assets/woodcutting/willow_tree.svg'),\n          requirementLevel: 25,\n          exp: 22,\n          cutTime: 5,\n          isActive: false,\n          reward: '柳木',\n          rewardIcon: require('@/assets/bank/logs_willow.png')\n        },\n        '柚树': {\n          name: '柚树',\n          icon: require('@/assets/woodcutting/teak_tree.svg'),\n          requirementLevel: 35,\n          exp: 30,\n          cutTime: 6,\n          isActive: false,\n          reward: '柚木',\n          rewardIcon: require('@/assets/bank/logs_teak.png')\n        },\n        '枫树': {\n          name: '枫树',\n          icon: require('@/assets/woodcutting/maple_tree.svg'),\n          requirementLevel: 45,\n          exp: 40,\n          cutTime: 8,\n          isActive: false,\n          reward: '枫木',\n          rewardIcon: require('@/assets/bank/logs_maple.png')\n        },\n        '桃花芯树': {\n          name: '桃花芯树',\n          icon: require('@/assets/woodcutting/mahogany_tree.svg'),\n          requirementLevel: 55,\n          exp: 60,\n          cutTime: 10,\n          isActive: false,\n          reward: '桃花芯木',\n          rewardIcon: require('@/assets/bank/logs_mahogany.png')\n        },\n        '紫衫': {\n          name: '紫衫',\n          icon: require('@/assets/woodcutting/yew_tree.svg'),\n          requirementLevel: 60,\n          exp: 80,\n          cutTime: 12,\n          isActive: false,\n          reward: '紫衫木',\n          rewardIcon: require('@/assets/bank/logs_yew.png')\n        },\n        '云杉': {\n          name: '云杉',\n          icon: require('@/assets/woodcutting/spruce_tree.svg'),\n          requirementLevel: 70,\n          exp: 100,\n          cutTime: 15,\n          isActive: false,\n          reward: '云杉原木',\n          rewardIcon: require('@/assets/bank/logs_spruce.png')\n        },\n        '菩提树': {\n          name: '菩提树',\n          icon: require('@/assets/woodcutting/linden_tree.svg'),\n          requirementLevel: 80,\n          exp: 140,\n          cutTime: 18,\n          isActive: false,\n          reward: '菩提原木',\n          rewardIcon: require('@/assets/bank/logs_linden.png')\n        },\n        '接骨木树': {\n          name: '接骨木树',\n          icon: require('@/assets/woodcutting/elderwood_tree.svg'),\n          requirementLevel: 85,\n          exp: 180,\n          cutTime: 20,\n          isActive: false,\n          reward: '接骨木',\n          rewardIcon: require('@/assets/bank/logs_elderwood.png')\n        },\n        '红木': {\n          name: '红木',\n          icon: require('@/assets/woodcutting/redwood_tree.svg'),\n          requirementLevel: 90,\n          exp: 195,\n          cutTime: 22,\n          isActive: false,\n          reward: '红木',\n          rewardIcon: require('@/assets/bank/logs_redwood.png')\n        },\n        '魔法树': {\n          name: '魔法树',\n          icon: require('@/assets/woodcutting/magic_tree.svg'),\n          requirementLevel: 95,\n          exp: 225,\n          cutTime: 25,\n          isActive: false,\n          reward: '魔法原木',\n          rewardIcon: require('@/assets/bank/logs_magic.png')\n        }\n      }\n    };\n  },\n  methods: {\n    switchActiveState(tree) {\n      if (this.isActived.length < (this.DoubleCutting ? 2 : 1) && tree.isActive === false) {\n        tree.isActive = true;\n        this.isActived.push({\n          count: 1,\n          ...tree\n        });\n        return;\n      }\n      if (this.isActived.includes(tree) || tree.isActive === true) {\n        tree.isActive = false;\n        const index = this.isActived.indexOf(tree);\n        this.isActived.splice(index, 1);\n        if (this.isActived.length === 1) {\n          this.isActived[0] = {\n            count: 1,\n            ...this.treesData[this.isActived[0].name]\n          };\n        }\n        return;\n      }\n    },\n    setTheShorterTreeData(shorterTree, longerTreeCutTime, coefficient) {\n      shorterTree.cutTime = longerTreeCutTime;\n      shorterTree.exp = Math.round(shorterTree.exp * coefficient);\n      shorterTree.count = Math.round(shorterTree.count * coefficient);\n    }\n  },\n  computed: {\n    isActivedLength() {\n      return this.isActived.length;\n    },\n    isAnimating() {\n      return this.isActived.length !== 0;\n    },\n    Duration() {\n      console.log(this.isActived[0]?.cutTime);\n      return this.isActived[0]?.cutTime;\n    }\n  },\n  watch: {\n    isActivedLength(newValue) {\n      if (this.timer) {\n        clearInterval(this.timer);\n        console.log('clear timer');\n        this.timer = null;\n      }\n      if (newValue === 0) return console.log('clear timer');\n      if (newValue === 1) {\n        console.log('set timer');\n        this.timer = setInterval(() => {\n          this.addItem(this.isActived[0].reward, 1);\n        }, this.isActived[0].cutTime * 1000);\n      }\n      if (newValue === 2) {\n        const [tree1, tree2] = this.isActived;\n        const shorterTree = tree1.cutTime < tree2.cutTime ? tree1 : tree2;\n        const longerTree = tree1.cutTime > tree2.cutTime ? tree1 : tree2;\n        const coefficient = longerTree.cutTime / shorterTree.cutTime;\n        this.setTheShorterTreeData(shorterTree, longerTree.cutTime, coefficient);\n        this.timer = setInterval(() => {\n          this.addItem(shorterTree.reward, Math.round(shorterTree.count * coefficient));\n          this.addItem(longerTree.reward, longerTree.count);\n        }, this.isActived[0].cutTime * 1000);\n      }\n    }\n  }\n};","map":{"version":3,"names":["BasicInfoBlock","cuttingBlock","useWarehouseStore","components","setup","WarehouseStore","addItem","data","isActived","timer","DoubleCutting","treesData","name","icon","require","requirementLevel","exp","cutTime","isActive","reward","rewardIcon","methods","switchActiveState","tree","length","push","count","includes","index","indexOf","splice","setTheShorterTreeData","shorterTree","longerTreeCutTime","coefficient","Math","round","computed","isActivedLength","isAnimating","Duration","console","log","watch","newValue","clearInterval","setInterval","tree1","tree2","longerTree"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\skills\\skillCutting.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <div class=\"cuttingAction\">\r\n        <basic-block class=\"header\"\r\n        :block-width=\"'100%'\"\r\n        :side-color=\"'rgb(53,143,18)'\">\r\n            <basic-exp-bar\r\n                :bar-height=\"'2rem'\"\r\n                :bar-width=\"'95%'\"\r\n                :initial-pos=\"'0%'\"\r\n                :animation-duration=\"`${Duration}s`\"\r\n                :is-animating=\"isAnimating\"\r\n            ></basic-exp-bar>\r\n            <span v-show=\"isActived.length === 0\">这里将会显示关于你的伐木动作的信息</span>\r\n            <div class=\"detail\" v-if=\"isActived.length !== 0\">\r\n                <div\r\n                v-for=\"(tree, idx) in isActived\"\r\n                :key=\"idx\"\r\n                class=\"outerEdge\">\r\n                    <div class=\"expPart\">\r\n                        <basic-info-block>\r\n                            <img class=\"action\" :src=\"tree.rewardIcon\">\r\n                            <template v-slot:count>\r\n                                {{tree.count}}\r\n                            </template>\r\n                        </basic-info-block>\r\n                        <basic-info-block>\r\n                            <img class=\"action\" src=\"../../../assets/main/mastery_header.svg\">\r\n                            <template v-slot:count>\r\n                                {{tree.exp}}\r\n                            </template>\r\n                        </basic-info-block>\r\n                    </div>\r\n                    <div class=\"masteryPart\">\r\n                        <basic-info-block>\r\n                            <img class=\"action\" src=\"../../../assets/main/xp.svg\">\r\n                            <template v-slot:count>\r\n                                {{tree.exp}}\r\n                            </template>\r\n                        </basic-info-block>\r\n                        <basic-info-block>\r\n                            <img class=\"action\" src=\"../../../assets/main/mastery_pool.svg\">\r\n                            <template v-slot:count>\r\n                                {{tree.exp}}\r\n                            </template>\r\n                        </basic-info-block>\r\n                        <basic-info-block\r\n                            :banner-color=\"'rgb(81,121,214)'\">\r\n                            <img class=\"action\" src=\"../../../assets/main/timer.svg\">\r\n                            <template v-slot:count>\r\n                                {{tree.cutTime}} 秒\r\n                            </template>\r\n                        </basic-info-block>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </basic-block>\r\n    </div>\r\n    <div class=\"trees\">\r\n        <cutting-block\r\n            v-for=\"tree in treesData\"\r\n            :key=\"tree.name\"\r\n            @click=\"switchActiveState(tree)\">   \r\n                <div class=\"treesContent\">\r\n                    <span :style=\"{fontSize:'0.7rem'}\">砍伐</span>\r\n                    <span :style=\"{fontSize:'0.9rem'}\">{{ tree.name }}</span>\r\n                    <span :style=\"{fontSize:'0.7rem'}\">{{ tree.exp }} 技能经验值/{{ tree.cutTime }}秒</span>\r\n                    <span><img :src=\"tree.icon\"></span>\r\n                    <basic-exp-bar\r\n                    :bar-width=\"'90%'\"\r\n                    :bar-height=\"'1.5rem'\"\r\n                    :initial-pos=\"tree.isActive ? '100%' :'0'\"\r\n                    :color-of-bar=\"'rgb(53,143,18)'\"\r\n                    ></basic-exp-bar>\r\n                    <div class=\"mastery_part\">\r\n                        <div class=\"iconPart\">\r\n                            <img src=\"../../../assets/main/mastery_header.svg\">\r\n                            <span>1</span>\r\n                        </div>\r\n                        <div class=\"mastery_exp_info\">\r\n                            <span :style=\"{fontSize:'0.75rem',marginBottom:'0.4rem'}\">0/1000</span>\r\n                            <basic-exp-bar\r\n                                :bar-width=\"'100%'\"\r\n                                :initial-pos=\"'0%'\"\r\n                            ></basic-exp-bar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </cutting-block>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport BasicInfoBlock from '../basicInfoBlock.vue';\r\nimport cuttingBlock from './cuttingBlock.vue'\r\nimport { useWarehouseStore } from '../../../stores/warehouse';\r\nexport default {\r\n  components: { cuttingBlock, BasicInfoBlock },\r\n    setup() {\r\n        const WarehouseStore = useWarehouseStore();\r\n        const addItem = WarehouseStore.addItem;\r\n        return{\r\n            addItem,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isActived:[],\r\n            timer:null,\r\n            DoubleCutting: true,\r\n            treesData: {\r\n                '普通树': {\r\n                    name:'普通树',\r\n                    icon: require('@/assets/woodcutting/normal_tree.svg'),\r\n                    requirementLevel:1,\r\n                    exp: 10,\r\n                    cutTime: 3,\r\n                    isActive: false,\r\n                    reward: '普通原木',\r\n                    rewardIcon: require('@/assets/bank/logs_normal.png'),\r\n                },\r\n                '橡树': {\r\n                    name:'橡树',\r\n                    icon: require('@/assets/woodcutting/oak_tree.svg'),\r\n                    requirementLevel:10,\r\n                    exp: 15,\r\n                    cutTime: 4,\r\n                    isActive: false,\r\n                    reward: '橡木',    \r\n                    rewardIcon: require('@/assets/bank/logs_oak.png'),\r\n                },\r\n                '柳树': {\r\n                    name:'柳树',\r\n                    icon: require('@/assets/woodcutting/willow_tree.svg'),\r\n                    requirementLevel:25,\r\n                    exp: 22,\r\n                    cutTime: 5,\r\n                    isActive: false,\r\n                    reward: '柳木',    \r\n                    rewardIcon: require('@/assets/bank/logs_willow.png'),\r\n                },\r\n                '柚树': {\r\n                    name:'柚树',\r\n                    icon: require('@/assets/woodcutting/teak_tree.svg'),\r\n                    requirementLevel:35,\r\n                    exp: 30,\r\n                    cutTime: 6,\r\n                    isActive: false,\r\n                    reward: '柚木',  \r\n                    rewardIcon: require('@/assets/bank/logs_teak.png'),\r\n                },\r\n                '枫树': {\r\n                    name:'枫树',\r\n                    icon: require('@/assets/woodcutting/maple_tree.svg'),\r\n                    requirementLevel:45,\r\n                    exp: 40,\r\n                    cutTime: 8,\r\n                    isActive: false,\r\n                    reward: '枫木',    \r\n                    rewardIcon: require('@/assets/bank/logs_maple.png'),\r\n                },\r\n                '桃花芯树': {\r\n                    name:'桃花芯树',\r\n                    icon: require('@/assets/woodcutting/mahogany_tree.svg'),\r\n                    requirementLevel:55,\r\n                    exp: 60,\r\n                    cutTime: 10,\r\n                    isActive: false,\r\n                    reward: '桃花芯木',    \r\n                    rewardIcon: require('@/assets/bank/logs_mahogany.png'),\r\n                },\r\n                '紫衫': {\r\n                    name:'紫衫',\r\n                    icon: require('@/assets/woodcutting/yew_tree.svg'),\r\n                    requirementLevel:60,\r\n                    exp: 80,\r\n                    cutTime: 12,\r\n                    isActive: false,\r\n                    reward: '紫衫木',    \r\n                    rewardIcon: require('@/assets/bank/logs_yew.png'),\r\n                },\r\n                '云杉': {\r\n                    name:'云杉',\r\n                    icon: require('@/assets/woodcutting/spruce_tree.svg'),\r\n                    requirementLevel:70,\r\n                    exp: 100,\r\n                    cutTime: 15,\r\n                    isActive: false,\r\n                    reward: '云杉原木',    \r\n                    rewardIcon: require('@/assets/bank/logs_spruce.png'),\r\n                },\r\n                '菩提树': {\r\n                    name:'菩提树',\r\n                    icon: require('@/assets/woodcutting/linden_tree.svg'),\r\n                    requirementLevel:80,\r\n                    exp: 140,\r\n                    cutTime: 18,\r\n                    isActive: false,\r\n                    reward: '菩提原木',    \r\n                    rewardIcon: require('@/assets/bank/logs_linden.png'),\r\n                },\r\n                '接骨木树': {\r\n                    name:'接骨木树',\r\n                    icon: require('@/assets/woodcutting/elderwood_tree.svg'),\r\n                    requirementLevel:85,\r\n                    exp: 180,\r\n                    cutTime: 20,\r\n                    isActive: false,\r\n                    reward: '接骨木',    \r\n                    rewardIcon: require('@/assets/bank/logs_elderwood.png'),\r\n                },\r\n                '红木': {\r\n                    name:'红木',\r\n                    icon: require('@/assets/woodcutting/redwood_tree.svg'),\r\n                    requirementLevel:90,\r\n                    exp: 195,\r\n                    cutTime: 22,\r\n                    isActive: false,\r\n                    reward: '红木',    \r\n                    rewardIcon: require('@/assets/bank/logs_redwood.png'),\r\n                },\r\n                '魔法树': {\r\n                    name:'魔法树',\r\n                    icon: require('@/assets/woodcutting/magic_tree.svg'),\r\n                    requirementLevel:95,\r\n                    exp: 225,\r\n                    cutTime: 25,\r\n                    isActive: false,\r\n                    reward: '魔法原木',   \r\n                    rewardIcon: require('@/assets/bank/logs_magic.png'),\r\n                },\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        switchActiveState(tree){\r\n            if(this.isActived.length < (this.DoubleCutting? 2 : 1) && tree.isActive === false){\r\n                tree.isActive = true;\r\n                \r\n                this.isActived.push({count:1, ...tree});\r\n                return\r\n            }\r\n            if(this.isActived.includes(tree) || tree.isActive === true){\r\n                tree.isActive = false;\r\n                const index = this.isActived.indexOf(tree);\r\n                this.isActived.splice(index,1);\r\n                if(this.isActived.length === 1){\r\n                    this.isActived[0] = {count: 1,...this.treesData[this.isActived[0].name]};\r\n                }\r\n                return\r\n            }\r\n        },\r\n        setTheShorterTreeData(shorterTree, longerTreeCutTime,coefficient){\r\n            shorterTree.cutTime = longerTreeCutTime;\r\n            shorterTree.exp = Math.round(shorterTree.exp * coefficient);\r\n            shorterTree.count = Math.round(shorterTree.count * coefficient);\r\n        }\r\n    },\r\n    computed: {\r\n        isActivedLength(){\r\n            return this.isActived.length;\r\n        },\r\n        isAnimating(){\r\n            return this.isActived.length !== 0;\r\n        },\r\n        Duration(){\r\n            console.log(this.isActived[0]?.cutTime)\r\n            return this.isActived[0]?.cutTime;\r\n        }\r\n    },\r\n    watch:{\r\n        isActivedLength(newValue){\r\n                    if (this.timer) {\r\n                        clearInterval(this.timer);\r\n                        console.log('clear timer')\r\n                        this.timer = null;\r\n                    }\r\n                    if (newValue === 0) return console.log('clear timer');\r\n                    if (newValue === 1) {\r\n                        console.log('set timer')\r\n                        this.timer = setInterval(() =>{    \r\n                            this.addItem(this.isActived[0].reward, 1);\r\n                        }, this.isActived[0].cutTime * 1000)\r\n                    }\r\n                    if (newValue === 2) {\r\n                        const [tree1,tree2] = this.isActived;\r\n                        const shorterTree = tree1.cutTime < tree2.cutTime ? tree1 : tree2;\r\n                        const longerTree = tree1.cutTime > tree2.cutTime ? tree1 : tree2;\r\n                        const coefficient = longerTree.cutTime/shorterTree.cutTime;\r\n                        this.setTheShorterTreeData(shorterTree, longerTree.cutTime, coefficient);  \r\n                        this.timer = setInterval(() =>{\r\n                            this.addItem(shorterTree.reward, Math.round(shorterTree.count * coefficient));\r\n                            this.addItem(longerTree.reward, longerTree.count);\r\n                        }, this.isActived[0].cutTime * 1000)\r\n                    }    \r\n            }\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cuttingAction{\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 20%;\r\n  gap: 2rem; \r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n}\r\n.detail{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    gap: 2rem;\r\n}\r\n.outerEdge{\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n.expPart{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    box-sizing: border-box;\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n}\r\n.masteryPart{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    box-sizing: border-box;\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n}\r\n.action{\r\n    height: 2rem;\r\n    width: 2rem;\r\n}\r\n.trees{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    gap: 2rem;\r\n    width: 100%;\r\n    padding: 2rem;\r\n    box-sizing: border-box;\r\n}\r\n.treesContent{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding-top: 2rem;\r\n    padding-bottom: 1rem;\r\n    box-sizing: border-box;\r\n}\r\n.treesContent > span{\r\n    margin: 0.2rem;\r\n    font:bolder;\r\n}\r\n.mastery_part{\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    justify-content: center;  \r\n    align-items: center;\r\n    align-content: center;\r\n    justify-items: center;\r\n    text-align: center;\r\n    margin-top:1rem;\r\n}\r\n.iconPart{\r\n   display: flex;\r\n   flex-direction: row;\r\n   gap:0.2rem;\r\n   margin: 0.3rem;\r\n}\r\n.mastery_part > .iconPart > img{\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    \r\n}\r\n.mastery_part > .mastery_exp_info{\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 60%;\r\n    justify-content: center;  \r\n    align-items: center;\r\n    padding:0px;\r\n}\r\n\r\nimg{\r\n    height:4rem;\r\n    width: 4rem;\r\n}\r\n\r\n\r\n.header :deep(.inner_block){\r\n    padding-top:2rem;\r\n    padding-bottom: 2rem;\r\n    gap: 2rem; \r\n    box-sizing: border-box;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}