{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n    class: \"overlay\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.close && $setup.close(...args)),\n    style: _normalizeStyle({\n      zIndex: $setup.state.isVisble ? '100' : '-1'\n    })\n  }, [_createCommentVNode(\" 使用 transition 来包裹 content \"), _createVNode(_Transition, {\n    name: \"window-slide\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", {\n      class: \"content\",\n      onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n    }, [_createElementVNode(\"span\", {\n      class: \"close-btn\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $setup.close && $setup.close(...args))\n    }, \"X\"), _cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n      class: \"guide\"\n    }, \"游戏指南\", -1 /* HOISTED */)), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n      class: \"popup-content\"\n    }, [_createElementVNode(\"p\", null, \"这里是弹出的内容\")], -1 /* HOISTED */))])]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */)), [[_vShow, $setup.state.isVisble]]);\n}","map":{"version":3,"names":["_createElementBlock","class","onClick","_cache","args","$setup","close","style","_normalizeStyle","zIndex","state","isVisble","_createCommentVNode","_createVNode","_Transition","name","default","_withCtx","_createElementVNode","_withModifiers","_"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\baseHelpPage.vue"],"sourcesContent":["<template>\r\n    <div v-show=\"state.isVisble\" class=\"overlay\" @click=\"close\" :style=\"{ zIndex: state.isVisble ? '100' : '-1' }\">\r\n  \r\n      <!-- 使用 transition 来包裹 content -->\r\n      <transition name=\"window-slide\">\r\n        <div class=\"content\" @click.stop>  \r\n          <span class=\"close-btn\" @click=\"close\">X</span>\r\n          <span class=\"guide\">游戏指南</span>\r\n          <div class=\"popup-content\">\r\n            <p>这里是弹出的内容</p>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { inject } from 'vue';\r\n  \r\n  export default {\r\n    setup() {\r\n      const state = inject('state');\r\n      const close = () => {\r\n        state.isVisble = false;\r\n      };\r\n      return { state, close };\r\n    },\r\n    props: {\r\n      position: {\r\n        type: Object,\r\n        default: () => ({ left: '0px', top: '0px' })\r\n      }\r\n    },\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 背景遮罩 */\r\n  .overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    justify-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  /* 调整 .content 的 position 为 absolute 或 fixed 来避免 transform 影响布局 */\r\n  .overlay > .content {\r\n    position: absolute; /* 确保它是相对定位，能参与 transform */\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3rem;\r\n    margin: 2rem;\r\n    width: 50%;\r\n    background-color: rgb(35, 42, 53);\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%); /* 初始居中 */\r\n  }\r\n  \r\n  .guide {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 1rem;\r\n    left: 1rem;\r\n    font-size: 0.75rem;\r\n    font-weight: 900;\r\n    letter-spacing: 0.5rem;\r\n  }\r\n  \r\n  .close-btn {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 1rem;\r\n    right: 1rem;\r\n    color: black;\r\n    background: none;\r\n    border: none;\r\n    border-radius: 1rem;\r\n    font-weight: bolder;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  /* 动画过渡效果 */\r\n  .window-slide-enter-active, .window-slide-leave-active {\r\n    transition: transform 0.5s ease, opacity 0.3s ease;\r\n  }\r\n  \r\n  .window-slide-enter, .window-slide-leave-to {\r\n    transform: translateY(-100%); /* 初始位置和离开时的位移 */\r\n    opacity: 0;\r\n  }\r\n  \r\n  .window-slide-enter-to {\r\n    transform: translateY(0); /* 动画结束时，位置应在屏幕中 */\r\n    opacity: 1;\r\n  }\r\n  </style>\r\n  "],"mappings":";;wCACIA,mBAAA,CAaM;IAbuBC,KAAK,EAAC,SAAS;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,KAAA,IAAAD,MAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAGG,KAAK,EADtEC,eAAA;MAAAC,MAAA,EACkFJ,MAAA,CAAAK,KAAK,CAACC,QAAQ;IAAA;MAE1FC,mBAAA,+BAAkC,EAClCC,YAAA,CAQaC,WAAA;IARDC,IAAI,EAAC;EAAc;IAJrCC,OAAA,EAAAC,QAAA,CAKQ,MAMM,CANNC,mBAAA,CAMM;MANDjB,KAAK,EAAC,SAAS;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MALnCgB,cAAA,CAK6B,QAAW;QAC9BD,mBAAA,CAA+C;MAAzCjB,KAAK,EAAC,WAAW;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,KAAA,IAAAD,MAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;OAAE,GAAC,G,0BACxCc,mBAAA,CAA+B;MAAzBjB,KAAK,EAAC;IAAO,GAAC,MAAI,sB,0BACxBiB,mBAAA,CAEM;MAFDjB,KAAK,EAAC;IAAe,IACxBiB,mBAAA,CAAe,WAAZ,UAAQ,E;IATvBE,CAAA;kCACiBf,MAAA,CAAAK,KAAK,CAACC,QAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}