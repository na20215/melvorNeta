{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { itemList } from '../data/itemList';\nexport const useWarehouseStore = defineStore('warehouse', {\n  state: () => ({\n    capacity: 20,\n    coin: 0,\n    slayerCoin: 0,\n    items: new Map()\n  }),\n  actions: {\n    isWarehouseFull() {\n      return this.items.size >= this.capacity;\n    },\n    addItem(itemId, count) {\n      const itemDetails = itemList[itemId];\n      if (!itemDetails) {\n        console.error('Item not found in item list:', itemId);\n        return;\n      }\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\n        console.log('Warehouse is full. Cannot add new item type.');\n        return;\n      }\n      const currentItem = this.items.get(itemId);\n      if (currentItem) {\n        currentItem.count += count;\n      } else {\n        const newitem = {\n          count: 0,\n          ...itemDetails\n        };\n        newitem.count += count;\n        this.items.set(itemId, newitem);\n        console.log(`Added ${count} ${itemDetails.name}(s) to the warehouse.`);\n        console.log(this.items);\n      }\n    },\n    getItemNumber(itemId) {\n      const thisItem = this.items.get(itemId);\n      return thisItem ? thisItem.count : 0;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","itemList","useWarehouseStore","state","capacity","coin","slayerCoin","items","Map","actions","isWarehouseFull","size","addItem","itemId","count","itemDetails","console","error","has","log","currentItem","get","newitem","set","name","getItemNumber","thisItem"],"sources":["C:/Users/10433/Downloads/vues/vue-cli-01-a-new-vue-project/src/stores/warehouse.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { itemList } from '../data/itemList';\r\n\r\nexport const useWarehouseStore = defineStore('warehouse', {\r\n  state: () => ({\r\n    capacity: 20,\r\n    coin:0,\r\n    slayerCoin:0,\r\n    items: new Map(),\r\n  }),\r\n\r\n  actions: {\r\n    isWarehouseFull() {\r\n        return this.items.size >= this.capacity;\r\n    },\r\n    addItem(itemId, count) {\r\n      const itemDetails = itemList[itemId];\r\n      if (!itemDetails) {\r\n        console.error('Item not found in item list:', itemId);\r\n        return;\r\n      }\r\n\r\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\r\n        console.log('Warehouse is full. Cannot add new item type.');\r\n        return;\r\n      }\r\n      const currentItem = this.items.get(itemId) \r\n      if(currentItem){\r\n        currentItem.count += count;\r\n      }else{\r\n        const newitem = {count: 0, ...itemDetails};\r\n        newitem.count += count;\r\n        this.items.set(itemId, newitem);\r\n        console.log(`Added ${count} ${itemDetails.name}(s) to the warehouse.`);\r\n        console.log(this.items);\r\n      }\r\n    },\r\n\r\n    getItemNumber(itemId) {\r\n      const thisItem = this.items.get(itemId);\r\n      return thisItem ? thisItem.count : 0;\r\n    },\r\n  },\r\n});"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,OAAO,MAAMC,iBAAiB,GAAGF,WAAW,CAAC,WAAW,EAAE;EACxDG,KAAK,EAAEA,CAAA,MAAO;IACZC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAC,CAAC;IACNC,UAAU,EAAC,CAAC;IACZC,KAAK,EAAE,IAAIC,GAAG,CAAC;EACjB,CAAC,CAAC;EAEFC,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,IAAI,IAAI,CAACP,QAAQ;IAC3C,CAAC;IACDQ,OAAOA,CAACC,MAAM,EAAEC,KAAK,EAAE;MACrB,MAAMC,WAAW,GAAGd,QAAQ,CAACY,MAAM,CAAC;MACpC,IAAI,CAACE,WAAW,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEJ,MAAM,CAAC;QACrD;MACF;MAEA,IAAI,IAAI,CAACH,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAACH,KAAK,CAACW,GAAG,CAACL,MAAM,CAAC,EAAE;QACrDG,OAAO,CAACG,GAAG,CAAC,8CAA8C,CAAC;QAC3D;MACF;MACA,MAAMC,WAAW,GAAG,IAAI,CAACb,KAAK,CAACc,GAAG,CAACR,MAAM,CAAC;MAC1C,IAAGO,WAAW,EAAC;QACbA,WAAW,CAACN,KAAK,IAAIA,KAAK;MAC5B,CAAC,MAAI;QACH,MAAMQ,OAAO,GAAG;UAACR,KAAK,EAAE,CAAC;UAAE,GAAGC;QAAW,CAAC;QAC1CO,OAAO,CAACR,KAAK,IAAIA,KAAK;QACtB,IAAI,CAACP,KAAK,CAACgB,GAAG,CAACV,MAAM,EAAES,OAAO,CAAC;QAC/BN,OAAO,CAACG,GAAG,CAAC,SAASL,KAAK,IAAIC,WAAW,CAACS,IAAI,uBAAuB,CAAC;QACtER,OAAO,CAACG,GAAG,CAAC,IAAI,CAACZ,KAAK,CAAC;MACzB;IACF,CAAC;IAEDkB,aAAaA,CAACZ,MAAM,EAAE;MACpB,MAAMa,QAAQ,GAAG,IAAI,CAACnB,KAAK,CAACc,GAAG,CAACR,MAAM,CAAC;MACvC,OAAOa,QAAQ,GAAGA,QAAQ,CAACZ,KAAK,GAAG,CAAC;IACtC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}