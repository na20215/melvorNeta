{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { itemList } from '../data/itemList';\nexport const useWarehouseStore = defineStore('warehouse', {\n  state: () => ({\n    capacity: 20,\n    coin: 0,\n    slayerCoin: 0,\n    items: new Map(),\n    currentNotification: null,\n    // 用来跟踪当前显示的通知\n    notificationTimer: null // 用来控制通知消失的计时器\n  }),\n  actions: {\n    isWarehouseFull() {\n      return this.items.size >= this.capacity;\n    },\n    // 显示通知\n    showNotification(itemName, itemQuantity) {\n      if (!this.currentNotification) {\n        // 检查是否有当前通知\n        this.currentNotification = {\n          itemName,\n          itemQuantity\n        };\n      }\n      if (this.currentNotification && this.currentNotification.itemName === itemName) {\n        // 如果是相同物品，更新数量并刷新计时器\n        this.currentNotification.itemQuantity = itemQuantity;\n        clearTimeout(this.notificationTimer);\n        this.startNotificationTimer(); // 重新计时\n      } else {\n        // 创建新通知\n        this.createNotification(itemName, itemQuantity);\n      }\n    },\n    createNotification(itemName, itemQuantity) {\n      const notification = document.createElement('div');\n      notification.innerHTML = `${itemName}: ${itemQuantity}`;\n      notification.style.position = 'fixed';\n      notification.style.bottom = '-50px';\n      notification.style.left = '50%';\n      notification.style.transform = 'translateX(-50%)';\n      notification.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n      notification.style.color = 'white';\n      notification.style.padding = '10px';\n      notification.style.borderRadius = '5px';\n      notification.style.transition = 'bottom 0.5s ease-in-out';\n      document.body.appendChild(notification);\n\n      // 移动到屏幕底部\n      setTimeout(() => {\n        notification.style.bottom = '20px';\n      }, 50);\n\n      // 开始计时器，2秒后隐藏\n      this.startNotificationTimer(notification);\n    },\n    startNotificationTimer(notification) {\n      this.notificationTimer = setTimeout(() => {\n        // 隐藏并删除通知\n        if (notification) {\n          notification.style.bottom = '-50px';\n          setTimeout(() => {\n            document.body.removeChild(notification);\n          }, 500);\n        }\n\n        // 重置当前通知\n        this.currentNotification = null;\n      }, 2000); // 2秒后消失\n    },\n    addItem(itemId, count) {\n      const itemDetails = itemList[itemId];\n      if (!itemDetails) {\n        console.error('Item not found in item list:', itemId);\n        return;\n      }\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\n        console.log('Warehouse is full. Cannot add new item type.');\n        return;\n      }\n      const currentItem = this.items.get(itemId);\n      if (currentItem) {\n        currentItem.count += count;\n      } else {\n        const newItem = {\n          count: 0,\n          ...itemDetails\n        };\n        newItem.count += count;\n        this.items.set(itemId, newItem);\n        console.log(`Added ${count} ${itemDetails.name}(s) to the warehouse.`);\n        console.log(this.items);\n      }\n\n      // 显示浮动通知\n      setTimeout(() => {\n        // 延迟保证通知不会由于并发问题而被清除过早\n        this.showNotification(itemDetails.name, this.items.get(itemId).count);\n      }, 50);\n    },\n    costItem(itemId, count) {\n      const targetItem = this.items.get(itemId);\n      if (targetItem.count < count) {\n        console.log(`Action failed, the number of ${targetItem.name} is not enough`);\n        return;\n      }\n      targetItem.count -= count;\n      if (targetItem.count === 0) {\n        this.items.delete(itemId);\n      }\n    },\n    getItemNumber(itemId) {\n      const thisItem = this.items.get(itemId);\n      return thisItem ? thisItem.count : 0;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","itemList","useWarehouseStore","state","capacity","coin","slayerCoin","items","Map","currentNotification","notificationTimer","actions","isWarehouseFull","size","showNotification","itemName","itemQuantity","clearTimeout","startNotificationTimer","createNotification","notification","document","createElement","innerHTML","style","position","bottom","left","transform","backgroundColor","color","padding","borderRadius","transition","body","appendChild","setTimeout","removeChild","addItem","itemId","count","itemDetails","console","error","has","log","currentItem","get","newItem","set","name","costItem","targetItem","delete","getItemNumber","thisItem"],"sources":["C:/Users/10433/Downloads/vues/vue-cli-01-a-new-vue-project/src/stores/warehouse.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport { itemList } from '../data/itemList';\r\n\r\nexport const useWarehouseStore = defineStore('warehouse', {\r\n  state: () => ({\r\n    capacity: 20,\r\n    coin: 0,\r\n    slayerCoin: 0,\r\n    items: new Map(),\r\n    currentNotification: null, // 用来跟踪当前显示的通知\r\n    notificationTimer: null,    // 用来控制通知消失的计时器\r\n  }),\r\n\r\n  actions: {\r\n    isWarehouseFull() {\r\n      return this.items.size >= this.capacity;\r\n    },\r\n    \r\n    // 显示通知\r\n    showNotification(itemName, itemQuantity) {\r\n      if (!this.currentNotification) {  // 检查是否有当前通知\r\n        this.currentNotification = { itemName, itemQuantity };\r\n      }\r\n\r\n      if (this.currentNotification && this.currentNotification.itemName === itemName) {\r\n        // 如果是相同物品，更新数量并刷新计时器\r\n        this.currentNotification.itemQuantity = itemQuantity;\r\n        clearTimeout(this.notificationTimer);\r\n        this.startNotificationTimer(); // 重新计时\r\n      } else {\r\n        // 创建新通知\r\n        this.createNotification(itemName, itemQuantity);\r\n      }\r\n    },\r\n\r\n    createNotification(itemName, itemQuantity) {\r\n      const notification = document.createElement('div');\r\n      notification.innerHTML = `${itemName}: ${itemQuantity}`;\r\n      notification.style.position = 'fixed';\r\n      notification.style.bottom = '-50px';\r\n      notification.style.left = '50%';\r\n      notification.style.transform = 'translateX(-50%)';\r\n      notification.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\r\n      notification.style.color = 'white';\r\n      notification.style.padding = '10px';\r\n      notification.style.borderRadius = '5px';\r\n      notification.style.transition = 'bottom 0.5s ease-in-out';\r\n      document.body.appendChild(notification);\r\n\r\n      // 移动到屏幕底部\r\n      setTimeout(() => {\r\n        notification.style.bottom = '20px';\r\n      }, 50);\r\n\r\n      // 开始计时器，2秒后隐藏\r\n      this.startNotificationTimer(notification);\r\n    },\r\n\r\n    startNotificationTimer(notification) {\r\n      this.notificationTimer = setTimeout(() => {\r\n        // 隐藏并删除通知\r\n        if (notification) {\r\n          notification.style.bottom = '-50px';\r\n          setTimeout(() => {\r\n            document.body.removeChild(notification);\r\n          }, 500);\r\n        }\r\n\r\n        // 重置当前通知\r\n        this.currentNotification = null;\r\n      }, 2000); // 2秒后消失\r\n    },\r\n\r\n    addItem(itemId, count) {\r\n      const itemDetails = itemList[itemId];\r\n      if (!itemDetails) {\r\n        console.error('Item not found in item list:', itemId);\r\n        return;\r\n      }\r\n\r\n      if (this.isWarehouseFull() && !this.items.has(itemId)) {\r\n        console.log('Warehouse is full. Cannot add new item type.');\r\n        return;\r\n      }\r\n\r\n      const currentItem = this.items.get(itemId);\r\n      if (currentItem) {\r\n        currentItem.count += count;\r\n      } else {\r\n        const newItem = { count: 0, ...itemDetails };\r\n        newItem.count += count;\r\n        this.items.set(itemId, newItem);\r\n        console.log(`Added ${count} ${itemDetails.name}(s) to the warehouse.`);\r\n        console.log(this.items);\r\n      }\r\n\r\n      // 显示浮动通知\r\n      setTimeout(() => { // 延迟保证通知不会由于并发问题而被清除过早\r\n        this.showNotification(itemDetails.name, this.items.get(itemId).count);\r\n      }, 50);\r\n    },\r\n\r\n    costItem(itemId, count) {\r\n      const targetItem = this.items.get(itemId);\r\n      if (targetItem.count < count) {\r\n        console.log(`Action failed, the number of ${targetItem.name} is not enough`);\r\n        return;\r\n      }\r\n      targetItem.count -= count;\r\n      if (targetItem.count === 0) {\r\n        this.items.delete(itemId);\r\n      }\r\n    },\r\n\r\n    getItemNumber(itemId) {\r\n      const thisItem = this.items.get(itemId);\r\n      return thisItem ? thisItem.count : 0;\r\n    },\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}