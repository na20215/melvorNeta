{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"fishingGrounds\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_fishing_block = _resolveComponent(\"fishing-block\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fishingGrounds, ground => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"helperSturcture\",\n      key: ground.name\n    }, [_createVNode(_component_fishing_block, {\n      \"fishing-ground\": ground,\n      \"ground-is-worked\": $data.groundIsWorked,\n      onStopFishing: $options.stopFishing,\n      onAddGroundName: $options.getFishingTarget\n    }, null, 8 /* PROPS */, [\"fishing-ground\", \"ground-is-worked\", \"onStopFishing\", \"onAddGroundName\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.packThePackage($data.groundIsWorked, $data.fishIsHunted))\n  }, \"test\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_renderList","$data","fishingGrounds","ground","key","name","_createVNode","_component_fishing_block","groundIsWorked","onStopFishing","$options","stopFishing","onAddGroundName","getFishingTarget","onClick","_cache","$event","packThePackage","fishIsHunted"],"sources":["C:\\Users\\10433\\Downloads\\vues\\vue-cli-01-a-new-vue-project\\src\\components\\layout\\skills\\skillFishing.vue"],"sourcesContent":["<template>\r\n<div class=\"fishingGrounds\">\r\n  <div class=\"helperSturcture\" v-for=\"ground in fishingGrounds\"\r\n    :key=\"ground.name\">\r\n  <fishing-block \r\n  :fishing-ground=\"ground\"\r\n  :ground-is-worked=\"groundIsWorked\"\r\n  @stop-fishing=\"stopFishing\"\r\n  @add-ground-name=\"getFishingTarget\">\r\n  </fishing-block>\r\n  </div>\r\n</div>\r\n<button @click=\"packThePackage(groundIsWorked,fishIsHunted)\">test</button>\r\n</template>\r\n\r\n<script>\r\nimport { levelList } from '../../../data/levelList.js';\r\nimport { fishingGrounds,junkPack,spicialPack } from '../../../data/skillFishing.js';\r\nimport { useSkillStore } from '../../../stores/expPark.js';\r\nimport { useWarehouseStore } from '../../../stores/warehouse.js';\r\nimport fishingBlock from './fishingBlock.vue';\r\nexport default {\r\n  components: { fishingBlock },\r\n  setup() {\r\n    const WarehouseStore = useWarehouseStore();\r\n    const SkillStore = useSkillStore();\r\n    const activeSkill = SkillStore.activeSkill;\r\n    const skillInfo = SkillStore.skills['钓鱼'];\r\n    const cumutiveProbablity = WarehouseStore.checkCumulativeProbabilities;\r\n    const addItem = WarehouseStore.addItem;\r\n    const openChest = WarehouseStore.openChest;\r\n    const addExp = SkillStore.addExp;\r\n    const getMasteryExp = SkillStore.getMasteryExp;\r\n    const addMasteryPool = SkillStore.addMasteryPoolExp;\r\n    return{\r\n      cumutiveProbablity,\r\n      addItem,\r\n      openChest,\r\n      addExp,\r\n      getMasteryExp,\r\n      addMasteryPool,\r\n      skillInfo,\r\n      activeSkill\r\n      \r\n    }\r\n  },\r\n    data() {\r\n  return {\r\n    isWorked:false,//管理定时器\r\n    timer:'',\r\n    groundIsWorked:'',\r\n    fishIsHunted:'',\r\n    probabilityPool:[],\r\n    fishingGrounds: fishingGrounds,\r\n    junkPack:junkPack,\r\n    spicialPack:spicialPack,\r\n  };\r\n},\r\nmethods: {\r\n  packThePackage(ground,fish){\r\n    const fishDetail = this.fishingGrounds[ground].fishInGround[fish];\r\n    const rewardPackage = [fishDetail,this.junkPack,this.spicialPack];\r\n    return rewardPackage;\r\n     \r\n  },\r\n  getRandomFishInterval(min,max, randomValue){\r\n    const fishInterval = (min + randomValue*(max - min)) * 1000;\r\n    return fishInterval;\r\n  },\r\n  getFishingTarget(data){\r\n    this.groundIsWorked = data['groundName'];\r\n    this.fishIsHunted = data['fishName'];\r\n  },\r\n  stopFishing(){\r\n    // console.log(\"stopfishing 在skillfishing触发了！\")\r\n    this.groundIsWorked ='';\r\n    this.fishIsHunted='';\r\n  },\r\n  addMasteryExp(fish){\r\n        fish.masteryExp += fish.addMasteryExp;\r\n        if(fish.masteryExp >= levelList[fish.masteryLevel]){\r\n          fish.masteryLevel++;\r\n          const averageTime = (fish.maxTime + fish.minTime)/2;\r\n          fish.addMasteryExp = Math.round(this.getMasteryExp(fish.masteryLevel,23,averageTime));\r\n          fish.addMasteryPoolExp = Math.ceil(fish.addMasteryExp/4);\r\n        }\r\n    }\r\n},\r\ncomputed:{\r\n\r\n},\r\n\r\nwatch:{\r\n  groundIsWorked(newVal){ \r\n    if(newVal === '') return;\r\n    const probabilityArr = Object.values(this.fishingGrounds[newVal].catchProbabilities)\r\n    this.probabilityPool = probabilityArr;\r\n  },\r\n  fishIsHunted(){\r\n    if(this.timer){\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n    if(this.fishIsHunted === '') return;\r\n    const rewardPackage = this.packThePackage(this.groundIsWorked,this.fishIsHunted);\r\n    let randomValue = Math.random();\r\n    let timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime,rewardPackage[0].maxTime,randomValue);\r\n    this.timer = setInterval(()=>{  \r\n      randomValue = Math.random();\r\n      timeThisRound = this.getRandomFishInterval(rewardPackage[0].minTime,rewardPackage[0].maxTime,randomValue);\r\n      const RandThisRound = this.cumutiveProbablity(this.probabilityPool,randomValue);\r\n      if(RandThisRound === 0){\r\n        this.addItem(rewardPackage[0].name, rewardPackage[0].count);\r\n        this.addExp('钓鱼',rewardPackage[0].exp);\r\n        this.addMasteryExp(rewardPackage[0]);\r\n        this.addMasteryPool('钓鱼',rewardPackage[0].addMasteryPoolExp)\r\n      }else{\r\n        this.openChest(rewardPackage[RandThisRound]);\r\n      }\r\n    },timeThisRound)\r\n  }\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.fishingGrounds{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    gap: 1.5rem;\r\n    width: 100%;\r\n    padding: 1.5rem;\r\n    box-sizing: border-box;\r\n}\r\n.helperSturcture{\r\n  display: flex;\r\n  width: 48%;\r\n}\r\n\r\n</style>"],"mappings":";;EACKA,KAAK,EAAC;AAAgB;;;uBAD3BC,mBAAA,CAAAC,SAAA,SACAC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJH,mBAAA,CAQMC,SAAA,QAVRG,WAAA,CAEgDC,KAAA,CAAAC,cAAc,EAAxBC,MAAM;yBAA1CP,mBAAA,CAQM;MARDD,KAAK,EAAC,iBAAiB;MACzBS,GAAG,EAAED,MAAM,CAACE;QACfC,YAAA,CAKgBC,wBAAA;MAJf,gBAAc,EAAEJ,MAAM;MACtB,kBAAgB,EAAEF,KAAA,CAAAO,cAAc;MAChCC,aAAY,EAAEC,QAAA,CAAAC,WAAW;MACzBC,eAAe,EAAEF,QAAA,CAAAG;;oCAIpBf,mBAAA,CAA0E;IAAjEgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,QAAA,CAAAO,cAAc,CAAChB,KAAA,CAAAO,cAAc,EAACP,KAAA,CAAAiB,YAAY;KAAG,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}